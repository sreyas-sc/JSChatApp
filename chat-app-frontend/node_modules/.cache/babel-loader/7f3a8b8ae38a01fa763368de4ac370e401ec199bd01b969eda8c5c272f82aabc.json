{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreyas\\\\OneDrive\\\\Desktop\\\\BellaCode\\\\chat-app-frontend\\\\src\\\\components\\\\VidCall.js\",\n  _s = $RefreshSig$();\n// // export default VideoCall;\n// import React, { useEffect, useRef, useState } from 'react';\n// import Peer from 'peerjs';\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\n\n// const VideoCall = () => {\n//   const [peerId, setPeerId] = useState('');\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n//   const [chatMessages, setChatMessages] = useState([]);\n//   const [newMessage, setNewMessage] = useState('');\n//   const [isCalling, setIsCalling] = useState(false);\n//   const [callInstance, setCallInstance] = useState(null);\n\n//   const remoteVideoRef = useRef(null);\n//   const currentUserVideoRef = useRef(null);\n//   const peerInstance = useRef(null);\n\n//   const navigate = useNavigate(); // Initialize useNavigate hook\n\n//   useEffect(() => {\n//     const peer = new Peer();\n\n//     peer.on('open', (id) => {\n//       setPeerId(id);\n//     });\n\n//     peer.on('call', (call) => {\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//         .then((mediaStream) => {\n//           if (currentUserVideoRef.current) {\n//             currentUserVideoRef.current.srcObject = mediaStream;\n//             currentUserVideoRef.current.play().catch(console.error);\n//           }\n\n//           call.answer(mediaStream);\n\n//           call.on('stream', (remoteStream) => {\n//             if (remoteVideoRef.current) {\n//               remoteVideoRef.current.srcObject = remoteStream;\n//               remoteVideoRef.current.play().catch(console.error);\n//             }\n//           });\n\n//           call.on('close', () => {\n//             setIsCalling(false);\n//             setCallInstance(null);\n//           });\n\n//           setIsCalling(true);\n//           setCallInstance(call);\n//         })\n//         .catch(console.error);\n//     });\n\n//     peerInstance.current = peer;\n\n//     return () => {\n//       if (peerInstance.current) {\n//         peerInstance.current.destroy();\n//       }\n//       const currentStream = currentUserVideoRef.current?.srcObject;\n//       if (currentStream) {\n//         const tracks = currentStream.getTracks();\n//         tracks.forEach(track => track.stop());\n//       }\n//       const remoteStreamElement = remoteVideoRef.current?.srcObject;\n//       if (remoteStreamElement) {\n//         const tracks = remoteStreamElement.getTracks();\n//         tracks.forEach(track => track.stop());\n//       }\n//     };\n//   }, []);\n\n//   const call = (remotePeerId) => {\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//       .then((mediaStream) => {\n//         if (currentUserVideoRef.current) {\n//           currentUserVideoRef.current.srcObject = mediaStream;\n//           currentUserVideoRef.current.play().catch(console.error);\n//         }\n\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\n//         setIsCalling(true);\n//         setCallInstance(call);\n\n//         call.on('stream', (remoteStream) => {\n//           if (remoteVideoRef.current) {\n//             remoteVideoRef.current.srcObject = remoteStream;\n//             remoteVideoRef.current.play().catch(console.error);\n//           }\n//         });\n\n//         call.on('close', () => {\n//           setIsCalling(false);\n//           setCallInstance(null);\n//         });\n//       })\n//       .catch(console.error);\n//   };\n\n//   const endCall = () => {\n//     if (callInstance) {\n//       callInstance.close();\n//       setIsCalling(false);\n//       setCallInstance(null);\n//     }\n//   };\n\n//   const copyToClipboard = () => {\n//     navigator.clipboard.writeText(peerId).then(() => {\n//       alert('Peer ID copied to clipboard');\n//     });\n//   };\n\n//   const sendMessage = () => {\n//     if (newMessage.trim()) {\n//       setChatMessages([...chatMessages, { text: newMessage, sender: 'You' }]);\n//       setNewMessage('');\n//     }\n//   };\n\n//   return (\n//     <div className=\"flex min-h-screen\">\n//       <div className=\"w-1/4 bg-gray-100 p-4\">\n//         <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4\">\n//           <div className=\"text-lg font-medium mb-2\">Chat</div>\n//           <div className=\"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\">\n//             {chatMessages.map((msg, index) => (\n//               <div key={index} className={`mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`}>\n//                 <div className={`inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`}>\n//                   {msg.text}\n//                 </div>\n//               </div>\n//             ))}\n//           </div>\n//           <div className=\"flex\">\n//             <input\n//               type=\"text\"\n//               value={newMessage}\n//               onChange={e => setNewMessage(e.target.value)}\n//               placeholder=\"Type a message\"\n//               className=\"border border-gray-300 p-2 rounded-lg w-full\"\n//             />\n//             <button\n//               onClick={sendMessage}\n//               className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\"\n//             >\n//               Send\n//             </button>\n//           </div>\n//         </div>\n//       </div>\n//       <div className=\"flex-1 p-4\">\n//         <header className=\"w-full bg-green-200 text-white text-center p-4 flex items-center justify-between\">          <button\n//        onClick={() => navigate(-1)} // Use navigate hook to go back\n//         type=\"button\"\n//         className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group mb-4\"\n//       >\n//         <div\n//           className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\n//         >\n//           <svg\n//             width=\"25px\"\n//             height=\"25px\"\n//             viewBox=\"0 0 1024 1024\"\n//             xmlns=\"http://www.w3.org/2000/svg\"\n//           >\n//             <path\n//               fill=\"#000000\"\n//               d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n//             ></path>\n//             <path\n//               fill=\"#000000\"\n//               d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n//             ></path>\n//           </svg>\n//         </div>\n//         <p className=\"translate-x-2\">Go Back</p>\n//       </button>\n//           <h1 className=\"text-xl font-semibold\">Video Call</h1>\n//           <div></div> {/* Placeholder for header layout */}\n//         </header>\n\n//         <div className=\"w-full max-w-2xl mt-4\">\n//           <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\">\n//             <div className=\"text-center\">\n//               <div className=\"text-lg font-medium mb-2\">Your ID</div>\n//               <div className=\"flex items-center justify-center\">\n//                 <span className=\"bg-gray-200 p-2 rounded-lg\">{peerId}</span>\n//                 <button \n//                   className=\"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\"\n//                   onClick={copyToClipboard}\n//                 >\n//                   Copy\n//                 </button>\n//               </div>\n//             </div>\n//           </div>\n\n//           <div className=\"mb-4\">\n//             <input\n//               type=\"text\"\n//               value={remotePeerIdValue}\n//               onChange={e => setRemotePeerIdValue(e.target.value)}\n//               placeholder=\"Enter remote peer ID\"\n//               className=\"border border-gray-300 p-2 rounded-lg w-full\"\n//             />\n//             <button\n//   onClick={() => isCalling ? endCall() : call(remotePeerIdValue)}\n//   className={`mt-2 px-4 py-2 ${isCalling ? 'bg-red-500' : 'bg-green-500'} text-white rounded-lg w-full`}\n// >\n//   {isCalling ? `End Call with  ${localStorage.getItem('username')}` : 'Start Call'}\n// </button>\n\n//           </div>\n\n//           <div className=\"flex gap-4\">\n//             <div className=\"w-1/2\">\n//               <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-64 bg-gray-200\" />\n//             </div>\n//             <div className=\"w-1/2\">\n//               <video ref={remoteVideoRef} autoPlay className=\"w-full h-64 bg-gray-200\" />\n//             </div>\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default VideoCall;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'peerjs';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [peerId, setPeerId] = useState('');\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isCalling, setIsCalling] = useState(false);\n  const [callInstance, setCallInstance] = useState(null);\n  const remoteVideoRef = useRef(null);\n  const currentUserVideoRef = useRef(null);\n  const peerInstance = useRef(null);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const peer = new Peer();\n    peer.on('open', id => {\n      setPeerId(id);\n    });\n    peer.on('call', call => {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(mediaStream => {\n        if (currentUserVideoRef.current) {\n          currentUserVideoRef.current.srcObject = mediaStream;\n          currentUserVideoRef.current.play().catch(console.error);\n        }\n        call.answer(mediaStream);\n        call.on('stream', remoteStream => {\n          if (remoteVideoRef.current) {\n            remoteVideoRef.current.srcObject = remoteStream;\n            remoteVideoRef.current.play().catch(console.error);\n          }\n        });\n        call.on('close', () => {\n          endCall();\n        });\n        setIsCalling(true);\n        setCallInstance(call);\n      }).catch(console.error);\n    });\n    peerInstance.current = peer;\n    return () => {\n      var _currentUserVideoRef$, _remoteVideoRef$curre;\n      if (peerInstance.current) {\n        peerInstance.current.destroy();\n      }\n      const currentStream = (_currentUserVideoRef$ = currentUserVideoRef.current) === null || _currentUserVideoRef$ === void 0 ? void 0 : _currentUserVideoRef$.srcObject;\n      if (currentStream) {\n        const tracks = currentStream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      const remoteStreamElement = (_remoteVideoRef$curre = remoteVideoRef.current) === null || _remoteVideoRef$curre === void 0 ? void 0 : _remoteVideoRef$curre.srcObject;\n      if (remoteStreamElement) {\n        const tracks = remoteStreamElement.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const call = remotePeerId => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(mediaStream => {\n      if (currentUserVideoRef.current) {\n        currentUserVideoRef.current.srcObject = mediaStream;\n        currentUserVideoRef.current.play().catch(console.error);\n      }\n      const call = peerInstance.current.call(remotePeerId, mediaStream);\n      setIsCalling(true);\n      setCallInstance(call);\n      call.on('stream', remoteStream => {\n        if (remoteVideoRef.current) {\n          remoteVideoRef.current.srcObject = remoteStream;\n          remoteVideoRef.current.play().catch(console.error);\n        }\n      });\n      call.on('close', () => {\n        endCall();\n      });\n    }).catch(console.error);\n  };\n  const endCall = () => {\n    if (callInstance) {\n      callInstance.close();\n      setIsCalling(false);\n      setCallInstance(null);\n\n      // Stop the local video tracks\n      if (currentUserVideoRef.current) {\n        const stream = currentUserVideoRef.current.srcObject;\n        if (stream) {\n          const tracks = stream.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n      }\n\n      // Stop the remote video tracks\n      if (remoteVideoRef.current) {\n        const stream = remoteVideoRef.current.srcObject;\n        if (stream) {\n          const tracks = stream.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n      }\n\n      // Clear the video sources\n      if (currentUserVideoRef.current) {\n        currentUserVideoRef.current.srcObject = null;\n      }\n      if (remoteVideoRef.current) {\n        remoteVideoRef.current.srcObject = null;\n      }\n    }\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(peerId).then(() => {\n      alert('Peer ID copied to clipboard');\n    });\n  };\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      setChatMessages([...chatMessages, {\n        text: newMessage,\n        sender: 'You'\n      }]);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-100 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg p-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 382,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\",\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`,\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 386,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 385,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message\",\n            className: \"border border-gray-300 p-2 rounded-lg w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 393,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            className: \"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 400,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 392,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 381,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 380,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"w-full bg-green-200 text-white text-center p-4 flex items-center justify-between\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => navigate(-1),\n          type: \"button\",\n          className: \"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\",\n            children: /*#__PURE__*/_jsxDEV(\"svg\", {\n              width: \"25px\",\n              height: \"25px\",\n              viewBox: \"0 0 1024 1024\",\n              xmlns: \"http://www.w3.org/2000/svg\",\n              children: [/*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"#000000\",\n                d: \"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 425,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n                fill: \"#000000\",\n                d: \"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 429,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 416,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"translate-x-2\",\n            children: \"Go Back\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 411,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"Video Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 437,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: endCall,\n          className: \"bg-red-600 text-white px-4 py-2 rounded-lg\",\n          children: \"End Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 438,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-64 h-48 bg-gray-200 border border-gray-400 rounded-lg overflow-hidden\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: currentUserVideoRef,\n              autoPlay: true,\n              muted: true,\n              className: \"w-full h-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 448,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 447,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-64 h-48 bg-gray-200 border border-gray-400 rounded-lg overflow-hidden ml-4\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: remoteVideoRef,\n              autoPlay: true,\n              className: \"w-full h-full\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 451,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 450,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 446,\n          columnNumber: 11\n        }, this), !isCalling && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex flex-col items-center\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: remotePeerIdValue,\n            onChange: e => setRemotePeerIdValue(e.target.value),\n            placeholder: \"Enter remote peer ID\",\n            className: \"border border-gray-300 p-2 rounded-lg mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 456,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => call(remotePeerIdValue),\n            className: \"bg-blue-500 text-white px-4 py-2 rounded-lg\",\n            children: \"Call\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 463,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 455,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: copyToClipboard,\n          className: \"bg-green-500 text-white px-4 py-2 rounded-lg mt-4\",\n          children: \"Copy Peer ID\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 471,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 445,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 409,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 379,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"ttAAAJOmPLA7DSJ2/btj/3GYAe4=\", false, function () {\n  return [useNavigate];\n});\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","useNavigate","jsxDEV","_jsxDEV","VideoCall","_s","peerId","setPeerId","remotePeerIdValue","setRemotePeerIdValue","chatMessages","setChatMessages","newMessage","setNewMessage","isCalling","setIsCalling","callInstance","setCallInstance","remoteVideoRef","currentUserVideoRef","peerInstance","navigate","peer","on","id","call","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","current","srcObject","play","catch","console","error","answer","remoteStream","endCall","_currentUserVideoRef$","_remoteVideoRef$curre","destroy","currentStream","tracks","getTracks","forEach","track","stop","remoteStreamElement","remotePeerId","close","stream","copyToClipboard","clipboard","writeText","alert","sendMessage","trim","text","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","width","height","viewBox","xmlns","fill","d","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/VidCall.js"],"sourcesContent":["// // export default VideoCall;\r\n// import React, { useEffect, useRef, useState } from 'react';\r\n// import Peer from 'peerjs';\r\n// import { useNavigate } from 'react-router-dom'; // Import useNavigate from react-router-dom\r\n\r\n// const VideoCall = () => {\r\n//   const [peerId, setPeerId] = useState('');\r\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n//   const [chatMessages, setChatMessages] = useState([]);\r\n//   const [newMessage, setNewMessage] = useState('');\r\n//   const [isCalling, setIsCalling] = useState(false);\r\n//   const [callInstance, setCallInstance] = useState(null);\r\n\r\n//   const remoteVideoRef = useRef(null);\r\n//   const currentUserVideoRef = useRef(null);\r\n//   const peerInstance = useRef(null);\r\n\r\n//   const navigate = useNavigate(); // Initialize useNavigate hook\r\n\r\n//   useEffect(() => {\r\n//     const peer = new Peer();\r\n\r\n//     peer.on('open', (id) => {\r\n//       setPeerId(id);\r\n//     });\r\n\r\n//     peer.on('call', (call) => {\r\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//         .then((mediaStream) => {\r\n//           if (currentUserVideoRef.current) {\r\n//             currentUserVideoRef.current.srcObject = mediaStream;\r\n//             currentUserVideoRef.current.play().catch(console.error);\r\n//           }\r\n\r\n//           call.answer(mediaStream);\r\n          \r\n//           call.on('stream', (remoteStream) => {\r\n//             if (remoteVideoRef.current) {\r\n//               remoteVideoRef.current.srcObject = remoteStream;\r\n//               remoteVideoRef.current.play().catch(console.error);\r\n//             }\r\n//           });\r\n\r\n//           call.on('close', () => {\r\n//             setIsCalling(false);\r\n//             setCallInstance(null);\r\n//           });\r\n\r\n//           setIsCalling(true);\r\n//           setCallInstance(call);\r\n//         })\r\n//         .catch(console.error);\r\n//     });\r\n\r\n//     peerInstance.current = peer;\r\n\r\n//     return () => {\r\n//       if (peerInstance.current) {\r\n//         peerInstance.current.destroy();\r\n//       }\r\n//       const currentStream = currentUserVideoRef.current?.srcObject;\r\n//       if (currentStream) {\r\n//         const tracks = currentStream.getTracks();\r\n//         tracks.forEach(track => track.stop());\r\n//       }\r\n//       const remoteStreamElement = remoteVideoRef.current?.srcObject;\r\n//       if (remoteStreamElement) {\r\n//         const tracks = remoteStreamElement.getTracks();\r\n//         tracks.forEach(track => track.stop());\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   const call = (remotePeerId) => {\r\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//       .then((mediaStream) => {\r\n//         if (currentUserVideoRef.current) {\r\n//           currentUserVideoRef.current.srcObject = mediaStream;\r\n//           currentUserVideoRef.current.play().catch(console.error);\r\n//         }\r\n\r\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n//         setIsCalling(true);\r\n//         setCallInstance(call);\r\n\r\n//         call.on('stream', (remoteStream) => {\r\n//           if (remoteVideoRef.current) {\r\n//             remoteVideoRef.current.srcObject = remoteStream;\r\n//             remoteVideoRef.current.play().catch(console.error);\r\n//           }\r\n//         });\r\n\r\n//         call.on('close', () => {\r\n//           setIsCalling(false);\r\n//           setCallInstance(null);\r\n//         });\r\n//       })\r\n//       .catch(console.error);\r\n//   };\r\n\r\n//   const endCall = () => {\r\n//     if (callInstance) {\r\n//       callInstance.close();\r\n//       setIsCalling(false);\r\n//       setCallInstance(null);\r\n//     }\r\n//   };\r\n\r\n//   const copyToClipboard = () => {\r\n//     navigator.clipboard.writeText(peerId).then(() => {\r\n//       alert('Peer ID copied to clipboard');\r\n//     });\r\n//   };\r\n\r\n//   const sendMessage = () => {\r\n//     if (newMessage.trim()) {\r\n//       setChatMessages([...chatMessages, { text: newMessage, sender: 'You' }]);\r\n//       setNewMessage('');\r\n//     }\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex min-h-screen\">\r\n//       <div className=\"w-1/4 bg-gray-100 p-4\">\r\n//         <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4\">\r\n//           <div className=\"text-lg font-medium mb-2\">Chat</div>\r\n//           <div className=\"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\">\r\n//             {chatMessages.map((msg, index) => (\r\n//               <div key={index} className={`mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`}>\r\n//                 <div className={`inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`}>\r\n//                   {msg.text}\r\n//                 </div>\r\n//               </div>\r\n//             ))}\r\n//           </div>\r\n//           <div className=\"flex\">\r\n//             <input\r\n//               type=\"text\"\r\n//               value={newMessage}\r\n//               onChange={e => setNewMessage(e.target.value)}\r\n//               placeholder=\"Type a message\"\r\n//               className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n//             />\r\n//             <button\r\n//               onClick={sendMessage}\r\n//               className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\"\r\n//             >\r\n//               Send\r\n//             </button>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//       <div className=\"flex-1 p-4\">\r\n//         <header className=\"w-full bg-green-200 text-white text-center p-4 flex items-center justify-between\">          <button\r\n//        onClick={() => navigate(-1)} // Use navigate hook to go back\r\n//         type=\"button\"\r\n//         className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group mb-4\"\r\n//       >\r\n//         <div\r\n//           className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n//         >\r\n//           <svg\r\n//             width=\"25px\"\r\n//             height=\"25px\"\r\n//             viewBox=\"0 0 1024 1024\"\r\n//             xmlns=\"http://www.w3.org/2000/svg\"\r\n//           >\r\n//             <path\r\n//               fill=\"#000000\"\r\n//               d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n//             ></path>\r\n//             <path\r\n//               fill=\"#000000\"\r\n//               d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n//             ></path>\r\n//           </svg>\r\n//         </div>\r\n//         <p className=\"translate-x-2\">Go Back</p>\r\n//       </button>\r\n//           <h1 className=\"text-xl font-semibold\">Video Call</h1>\r\n//           <div></div> {/* Placeholder for header layout */}\r\n//         </header>\r\n        \r\n//         <div className=\"w-full max-w-2xl mt-4\">\r\n//           <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\">\r\n//             <div className=\"text-center\">\r\n//               <div className=\"text-lg font-medium mb-2\">Your ID</div>\r\n//               <div className=\"flex items-center justify-center\">\r\n//                 <span className=\"bg-gray-200 p-2 rounded-lg\">{peerId}</span>\r\n//                 <button \r\n//                   className=\"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\"\r\n//                   onClick={copyToClipboard}\r\n//                 >\r\n//                   Copy\r\n//                 </button>\r\n//               </div>\r\n//             </div>\r\n//           </div>\r\n          \r\n//           <div className=\"mb-4\">\r\n//             <input\r\n//               type=\"text\"\r\n//               value={remotePeerIdValue}\r\n//               onChange={e => setRemotePeerIdValue(e.target.value)}\r\n//               placeholder=\"Enter remote peer ID\"\r\n//               className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n//             />\r\n//             <button\r\n//   onClick={() => isCalling ? endCall() : call(remotePeerIdValue)}\r\n//   className={`mt-2 px-4 py-2 ${isCalling ? 'bg-red-500' : 'bg-green-500'} text-white rounded-lg w-full`}\r\n// >\r\n//   {isCalling ? `End Call with  ${localStorage.getItem('username')}` : 'Start Call'}\r\n// </button>\r\n\r\n//           </div>\r\n\r\n//           <div className=\"flex gap-4\">\r\n//             <div className=\"w-1/2\">\r\n//               <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-64 bg-gray-200\" />\r\n//             </div>\r\n//             <div className=\"w-1/2\">\r\n//               <video ref={remoteVideoRef} autoPlay className=\"w-full h-64 bg-gray-200\" />\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VideoCall;\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'peerjs';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nconst VideoCall = () => {\r\n  const [peerId, setPeerId] = useState('');\r\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isCalling, setIsCalling] = useState(false);\r\n  const [callInstance, setCallInstance] = useState(null);\r\n\r\n  const remoteVideoRef = useRef(null);\r\n  const currentUserVideoRef = useRef(null);\r\n  const peerInstance = useRef(null);\r\n\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const peer = new Peer();\r\n\r\n    peer.on('open', (id) => {\r\n      setPeerId(id);\r\n    });\r\n\r\n    peer.on('call', (call) => {\r\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((mediaStream) => {\r\n          if (currentUserVideoRef.current) {\r\n            currentUserVideoRef.current.srcObject = mediaStream;\r\n            currentUserVideoRef.current.play().catch(console.error);\r\n          }\r\n\r\n          call.answer(mediaStream);\r\n          \r\n          call.on('stream', (remoteStream) => {\r\n            if (remoteVideoRef.current) {\r\n              remoteVideoRef.current.srcObject = remoteStream;\r\n              remoteVideoRef.current.play().catch(console.error);\r\n            }\r\n          });\r\n\r\n          call.on('close', () => {\r\n            endCall();\r\n          });\r\n\r\n          setIsCalling(true);\r\n          setCallInstance(call);\r\n        })\r\n        .catch(console.error);\r\n    });\r\n\r\n    peerInstance.current = peer;\r\n\r\n    return () => {\r\n      if (peerInstance.current) {\r\n        peerInstance.current.destroy();\r\n      }\r\n      const currentStream = currentUserVideoRef.current?.srcObject;\r\n      if (currentStream) {\r\n        const tracks = currentStream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n      const remoteStreamElement = remoteVideoRef.current?.srcObject;\r\n      if (remoteStreamElement) {\r\n        const tracks = remoteStreamElement.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const call = (remotePeerId) => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((mediaStream) => {\r\n        if (currentUserVideoRef.current) {\r\n          currentUserVideoRef.current.srcObject = mediaStream;\r\n          currentUserVideoRef.current.play().catch(console.error);\r\n        }\r\n\r\n        const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n        setIsCalling(true);\r\n        setCallInstance(call);\r\n\r\n        call.on('stream', (remoteStream) => {\r\n          if (remoteVideoRef.current) {\r\n            remoteVideoRef.current.srcObject = remoteStream;\r\n            remoteVideoRef.current.play().catch(console.error);\r\n          }\r\n        });\r\n\r\n        call.on('close', () => {\r\n          endCall();\r\n        });\r\n      })\r\n      .catch(console.error);\r\n  };\r\n\r\n  const endCall = () => {\r\n    if (callInstance) {\r\n      callInstance.close();\r\n      setIsCalling(false);\r\n      setCallInstance(null);\r\n\r\n      // Stop the local video tracks\r\n      if (currentUserVideoRef.current) {\r\n        const stream = currentUserVideoRef.current.srcObject;\r\n        if (stream) {\r\n          const tracks = stream.getTracks();\r\n          tracks.forEach(track => track.stop());\r\n        }\r\n      }\r\n\r\n      // Stop the remote video tracks\r\n      if (remoteVideoRef.current) {\r\n        const stream = remoteVideoRef.current.srcObject;\r\n        if (stream) {\r\n          const tracks = stream.getTracks();\r\n          tracks.forEach(track => track.stop());\r\n        }\r\n      }\r\n\r\n      // Clear the video sources\r\n      if (currentUserVideoRef.current) {\r\n        currentUserVideoRef.current.srcObject = null;\r\n      }\r\n      if (remoteVideoRef.current) {\r\n        remoteVideoRef.current.srcObject = null;\r\n      }\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(peerId).then(() => {\r\n      alert('Peer ID copied to clipboard');\r\n    });\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      setChatMessages([...chatMessages, { text: newMessage, sender: 'You' }]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <div className=\"w-1/4 bg-gray-100 p-4\">\r\n        <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4\">\r\n          <div className=\"text-lg font-medium mb-2\">Chat</div>\r\n          <div className=\"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\">\r\n            {chatMessages.map((msg, index) => (\r\n              <div key={index} className={`mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`}>\r\n                <div className={`inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`}>\r\n                  {msg.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={e => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message\"\r\n              className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-1 p-4\">\r\n        <header className=\"w-full bg-green-200 text-white text-center p-4 flex items-center justify-between\">\r\n          <button\r\n            onClick={() => navigate(-1)}\r\n            type=\"button\"\r\n            className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group mb-4\"\r\n          >\r\n            <div\r\n              className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n            >\r\n              <svg\r\n                width=\"25px\"\r\n                height=\"25px\"\r\n                viewBox=\"0 0 1024 1024\"\r\n                xmlns=\"http://www.w3.org/2000/svg\"\r\n              >\r\n                <path\r\n                  fill=\"#000000\"\r\n                  d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n                ></path>\r\n                <path\r\n                  fill=\"#000000\"\r\n                  d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n                ></path>\r\n              </svg>\r\n            </div>\r\n            <p className=\"translate-x-2\">Go Back</p>\r\n          </button>\r\n          <h1 className=\"text-xl font-semibold\">Video Call</h1>\r\n          <button\r\n            onClick={endCall}\r\n            className=\"bg-red-600 text-white px-4 py-2 rounded-lg\"\r\n          >\r\n            End Call\r\n          </button>\r\n        </header>\r\n        <div className=\"flex flex-col items-center mt-4\">\r\n          <div className=\"flex mb-4\">\r\n            <div className=\"w-64 h-48 bg-gray-200 border border-gray-400 rounded-lg overflow-hidden\">\r\n              <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-full\" />\r\n            </div>\r\n            <div className=\"w-64 h-48 bg-gray-200 border border-gray-400 rounded-lg overflow-hidden ml-4\">\r\n              <video ref={remoteVideoRef} autoPlay className=\"w-full h-full\" />\r\n            </div>\r\n          </div>\r\n          {!isCalling && (\r\n            <div className=\"flex flex-col items-center\">\r\n              <input\r\n                type=\"text\"\r\n                value={remotePeerIdValue}\r\n                onChange={(e) => setRemotePeerIdValue(e.target.value)}\r\n                placeholder=\"Enter remote peer ID\"\r\n                className=\"border border-gray-300 p-2 rounded-lg mb-4\"\r\n              />\r\n              <button\r\n                onClick={() => call(remotePeerIdValue)}\r\n                className=\"bg-blue-500 text-white px-4 py-2 rounded-lg\"\r\n              >\r\n                Call\r\n              </button>\r\n            </div>\r\n          )}\r\n          <button\r\n            onClick={copyToClipboard}\r\n            className=\"bg-green-500 text-white px-4 py-2 rounded-lg mt-4\"\r\n          >\r\n            Copy Peer ID\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AACzB,SAASC,WAAW,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}