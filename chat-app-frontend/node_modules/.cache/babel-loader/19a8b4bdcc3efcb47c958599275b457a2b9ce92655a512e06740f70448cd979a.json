{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreyas\\\\OneDrive\\\\Desktop\\\\BellaCode\\\\chat-app-frontend\\\\src\\\\components\\\\VidCall.js\",\n  _s = $RefreshSig$();\n// // src/components/VideoCall.js\n\n// import React, { useEffect, useRef, useState } from 'react';\n// import Peer from 'peerjs';\n\n// const VideoCall = () => {\n//   const [peerId, setPeerId] = useState('');\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n//   const remoteVideoRef = useRef(null);\n//   const currentUserVideoRef = useRef(null);\n//   const peerInstance = useRef(null);\n\n//   useEffect(() => {\n//     const peer = new Peer();\n\n//     peer.on('open', (id) => {\n//       setPeerId(id);\n//     });\n\n//     peer.on('call', (call) => {\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//         .then((mediaStream) => {\n//           currentUserVideoRef.current.srcObject = mediaStream;\n//           currentUserVideoRef.current.play();\n//           call.answer(mediaStream);\n//           call.on('stream', (remoteStream) => {\n//             remoteVideoRef.current.srcObject = remoteStream;\n//             remoteVideoRef.current.play();\n//           });\n//         });\n//     });\n\n//     peerInstance.current = peer;\n\n//     return () => {\n//       peer.destroy();\n//     };\n//   }, []);\n\n//   const call = (remotePeerId) => {\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//       .then((mediaStream) => {\n//         currentUserVideoRef.current.srcObject = mediaStream;\n//         currentUserVideoRef.current.play();\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\n//         call.on('stream', (remoteStream) => {\n//           remoteVideoRef.current.srcObject = remoteStream;\n//           remoteVideoRef.current.play();\n//         });\n//       });\n//   };\n\n//   return (\n//     <div className=\"App\">\n//       <h1>Current user id is {peerId}</h1>\n//       <input\n//         type=\"text\"\n//         value={remotePeerIdValue}\n//         onChange={e => setRemotePeerIdValue(e.target.value)}\n//         placeholder=\"Enter remote peer ID\"\n//       />\n//       <button onClick={() => call(remotePeerIdValue)}>Call</button>\n//       <div>\n//         <video ref={currentUserVideoRef} autoPlay muted />\n//       </div>\n//       <div>\n//         <video ref={remoteVideoRef} autoPlay />\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default VideoCall;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [peerId, setPeerId] = useState('');\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n  const remoteVideoRef = useRef(null);\n  const currentUserVideoRef = useRef(null);\n  const peerInstance = useRef(null);\n  useEffect(() => {\n    const peer = new Peer();\n    peer.on('open', id => {\n      setPeerId(id);\n    });\n    peer.on('call', call => {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(mediaStream => {\n        // Clean up previous stream if any\n        const currentStream = currentUserVideoRef.current.srcObject;\n        if (currentStream) {\n          const tracks = currentStream.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n        currentUserVideoRef.current.srcObject = mediaStream;\n        currentUserVideoRef.current.play().catch(console.error);\n        call.answer(mediaStream);\n        call.on('stream', remoteStream => {\n          // Clean up previous remote stream if any\n          const remoteStreamElement = remoteVideoRef.current.srcObject;\n          if (remoteStreamElement) {\n            const tracks = remoteStreamElement.getTracks();\n            tracks.forEach(track => track.stop());\n          }\n          remoteVideoRef.current.srcObject = remoteStream;\n          remoteVideoRef.current.play().catch(console.error);\n        });\n      });\n    });\n    peerInstance.current = peer;\n    return () => {\n      // Clean up on component unmount\n      peer.destroy();\n      const currentStream = currentUserVideoRef.current.srcObject;\n      if (currentStream) {\n        const tracks = currentStream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      const remoteStreamElement = remoteVideoRef.current.srcObject;\n      if (remoteStreamElement) {\n        const tracks = remoteStreamElement.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const call = remotePeerId => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(mediaStream => {\n      // Clean up previous stream if any\n      const currentStream = currentUserVideoRef.current.srcObject;\n      if (currentStream) {\n        const tracks = currentStream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      currentUserVideoRef.current.srcObject = mediaStream;\n      currentUserVideoRef.current.play().catch(console.error);\n      const call = peerInstance.current.call(remotePeerId, mediaStream);\n      call.on('stream', remoteStream => {\n        // Clean up previous remote stream if any\n        const remoteStreamElement = remoteVideoRef.current.srcObject;\n        if (remoteStreamElement) {\n          const tracks = remoteStreamElement.getTracks();\n          tracks.forEach(track => track.stop());\n        }\n        remoteVideoRef.current.srcObject = remoteStream;\n        remoteVideoRef.current.play().catch(console.error);\n      });\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"Current user id is \", peerId]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: remotePeerIdValue,\n      onChange: e => setRemotePeerIdValue(e.target.value),\n      placeholder: \"Enter remote peer ID\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => call(remotePeerIdValue),\n      children: \"Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: currentUserVideoRef,\n        autoPlay: true,\n        muted: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: remoteVideoRef,\n        autoPlay: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"SeAon4Ls3sczUX4epmPJRhu3tS0=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","VideoCall","_s","peerId","setPeerId","remotePeerIdValue","setRemotePeerIdValue","remoteVideoRef","currentUserVideoRef","peerInstance","peer","on","id","call","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","currentStream","current","srcObject","tracks","getTracks","forEach","track","stop","play","catch","console","error","answer","remoteStream","remoteStreamElement","destroy","remotePeerId","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/VidCall.js"],"sourcesContent":["// // src/components/VideoCall.js\r\n\r\n// import React, { useEffect, useRef, useState } from 'react';\r\n// import Peer from 'peerjs';\r\n\r\n// const VideoCall = () => {\r\n//   const [peerId, setPeerId] = useState('');\r\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n//   const remoteVideoRef = useRef(null);\r\n//   const currentUserVideoRef = useRef(null);\r\n//   const peerInstance = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const peer = new Peer();\r\n\r\n//     peer.on('open', (id) => {\r\n//       setPeerId(id);\r\n//     });\r\n\r\n//     peer.on('call', (call) => {\r\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//         .then((mediaStream) => {\r\n//           currentUserVideoRef.current.srcObject = mediaStream;\r\n//           currentUserVideoRef.current.play();\r\n//           call.answer(mediaStream);\r\n//           call.on('stream', (remoteStream) => {\r\n//             remoteVideoRef.current.srcObject = remoteStream;\r\n//             remoteVideoRef.current.play();\r\n//           });\r\n//         });\r\n//     });\r\n\r\n//     peerInstance.current = peer;\r\n\r\n//     return () => {\r\n//       peer.destroy();\r\n//     };\r\n//   }, []);\r\n\r\n//   const call = (remotePeerId) => {\r\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//       .then((mediaStream) => {\r\n//         currentUserVideoRef.current.srcObject = mediaStream;\r\n//         currentUserVideoRef.current.play();\r\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n//         call.on('stream', (remoteStream) => {\r\n//           remoteVideoRef.current.srcObject = remoteStream;\r\n//           remoteVideoRef.current.play();\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"App\">\r\n//       <h1>Current user id is {peerId}</h1>\r\n//       <input\r\n//         type=\"text\"\r\n//         value={remotePeerIdValue}\r\n//         onChange={e => setRemotePeerIdValue(e.target.value)}\r\n//         placeholder=\"Enter remote peer ID\"\r\n//       />\r\n//       <button onClick={() => call(remotePeerIdValue)}>Call</button>\r\n//       <div>\r\n//         <video ref={currentUserVideoRef} autoPlay muted />\r\n//       </div>\r\n//       <div>\r\n//         <video ref={remoteVideoRef} autoPlay />\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VideoCall;\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'peerjs';\r\n\r\nconst VideoCall = () => {\r\n  const [peerId, setPeerId] = useState('');\r\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n  const remoteVideoRef = useRef(null);\r\n  const currentUserVideoRef = useRef(null);\r\n  const peerInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const peer = new Peer();\r\n\r\n    peer.on('open', (id) => {\r\n      setPeerId(id);\r\n    });\r\n\r\n    peer.on('call', (call) => {\r\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((mediaStream) => {\r\n          // Clean up previous stream if any\r\n          const currentStream = currentUserVideoRef.current.srcObject;\r\n          if (currentStream) {\r\n            const tracks = currentStream.getTracks();\r\n            tracks.forEach(track => track.stop());\r\n          }\r\n          \r\n          currentUserVideoRef.current.srcObject = mediaStream;\r\n          currentUserVideoRef.current.play().catch(console.error);\r\n          call.answer(mediaStream);\r\n          call.on('stream', (remoteStream) => {\r\n            // Clean up previous remote stream if any\r\n            const remoteStreamElement = remoteVideoRef.current.srcObject;\r\n            if (remoteStreamElement) {\r\n              const tracks = remoteStreamElement.getTracks();\r\n              tracks.forEach(track => track.stop());\r\n            }\r\n\r\n            remoteVideoRef.current.srcObject = remoteStream;\r\n            remoteVideoRef.current.play().catch(console.error);\r\n          });\r\n        });\r\n    });\r\n\r\n    peerInstance.current = peer;\r\n\r\n    return () => {\r\n      // Clean up on component unmount\r\n      peer.destroy();\r\n      const currentStream = currentUserVideoRef.current.srcObject;\r\n      if (currentStream) {\r\n        const tracks = currentStream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n      const remoteStreamElement = remoteVideoRef.current.srcObject;\r\n      if (remoteStreamElement) {\r\n        const tracks = remoteStreamElement.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const call = (remotePeerId) => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((mediaStream) => {\r\n        // Clean up previous stream if any\r\n        const currentStream = currentUserVideoRef.current.srcObject;\r\n        if (currentStream) {\r\n          const tracks = currentStream.getTracks();\r\n          tracks.forEach(track => track.stop());\r\n        }\r\n\r\n        currentUserVideoRef.current.srcObject = mediaStream;\r\n        currentUserVideoRef.current.play().catch(console.error);\r\n\r\n        const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n        call.on('stream', (remoteStream) => {\r\n          // Clean up previous remote stream if any\r\n          const remoteStreamElement = remoteVideoRef.current.srcObject;\r\n          if (remoteStreamElement) {\r\n            const tracks = remoteStreamElement.getTracks();\r\n            tracks.forEach(track => track.stop());\r\n          }\r\n\r\n          remoteVideoRef.current.srcObject = remoteStream;\r\n          remoteVideoRef.current.play().catch(console.error);\r\n        });\r\n      });\r\n  };\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <h1>Current user id is {peerId}</h1>\r\n      <input\r\n        type=\"text\"\r\n        value={remotePeerIdValue}\r\n        onChange={e => setRemotePeerIdValue(e.target.value)}\r\n        placeholder=\"Enter remote peer ID\"\r\n      />\r\n      <button onClick={() => call(remotePeerIdValue)}>Call</button>\r\n      <div>\r\n        <video ref={currentUserVideoRef} autoPlay muted />\r\n      </div>\r\n      <div>\r\n        <video ref={remoteVideoRef} autoPlay />\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"mappings":";;AAAA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAGA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC1D,OAAOC,IAAI,MAAM,QAAQ;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMU,cAAc,GAAGX,MAAM,CAAC,IAAI,CAAC;EACnC,MAAMY,mBAAmB,GAAGZ,MAAM,CAAC,IAAI,CAAC;EACxC,MAAMa,YAAY,GAAGb,MAAM,CAAC,IAAI,CAAC;EAEjCD,SAAS,CAAC,MAAM;IACd,MAAMe,IAAI,GAAG,IAAIZ,IAAI,CAAC,CAAC;IAEvBY,IAAI,CAACC,EAAE,CAAC,MAAM,EAAGC,EAAE,IAAK;MACtBR,SAAS,CAACQ,EAAE,CAAC;IACf,CAAC,CAAC;IAEFF,IAAI,CAACC,EAAE,CAAC,MAAM,EAAGE,IAAI,IAAK;MACxBC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE,IAAI;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC,CAC9DC,IAAI,CAAEC,WAAW,IAAK;QACrB;QACA,MAAMC,aAAa,GAAGb,mBAAmB,CAACc,OAAO,CAACC,SAAS;QAC3D,IAAIF,aAAa,EAAE;UACjB,MAAMG,MAAM,GAAGH,aAAa,CAACI,SAAS,CAAC,CAAC;UACxCD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QACvC;QAEApB,mBAAmB,CAACc,OAAO,CAACC,SAAS,GAAGH,WAAW;QACnDZ,mBAAmB,CAACc,OAAO,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACvDnB,IAAI,CAACoB,MAAM,CAACb,WAAW,CAAC;QACxBP,IAAI,CAACF,EAAE,CAAC,QAAQ,EAAGuB,YAAY,IAAK;UAClC;UACA,MAAMC,mBAAmB,GAAG5B,cAAc,CAACe,OAAO,CAACC,SAAS;UAC5D,IAAIY,mBAAmB,EAAE;YACvB,MAAMX,MAAM,GAAGW,mBAAmB,CAACV,SAAS,CAAC,CAAC;YAC9CD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;UACvC;UAEArB,cAAc,CAACe,OAAO,CAACC,SAAS,GAAGW,YAAY;UAC/C3B,cAAc,CAACe,OAAO,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;QACpD,CAAC,CAAC;MACJ,CAAC,CAAC;IACN,CAAC,CAAC;IAEFvB,YAAY,CAACa,OAAO,GAAGZ,IAAI;IAE3B,OAAO,MAAM;MACX;MACAA,IAAI,CAAC0B,OAAO,CAAC,CAAC;MACd,MAAMf,aAAa,GAAGb,mBAAmB,CAACc,OAAO,CAACC,SAAS;MAC3D,IAAIF,aAAa,EAAE;QACjB,MAAMG,MAAM,GAAGH,aAAa,CAACI,SAAS,CAAC,CAAC;QACxCD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACvC;MACA,MAAMO,mBAAmB,GAAG5B,cAAc,CAACe,OAAO,CAACC,SAAS;MAC5D,IAAIY,mBAAmB,EAAE;QACvB,MAAMX,MAAM,GAAGW,mBAAmB,CAACV,SAAS,CAAC,CAAC;QAC9CD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACvC;IACF,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMf,IAAI,GAAIwB,YAAY,IAAK;IAC7BvB,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;MAAEC,KAAK,EAAE,IAAI;MAAEC,KAAK,EAAE;IAAK,CAAC,CAAC,CAC9DC,IAAI,CAAEC,WAAW,IAAK;MACrB;MACA,MAAMC,aAAa,GAAGb,mBAAmB,CAACc,OAAO,CAACC,SAAS;MAC3D,IAAIF,aAAa,EAAE;QACjB,MAAMG,MAAM,GAAGH,aAAa,CAACI,SAAS,CAAC,CAAC;QACxCD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;MACvC;MAEApB,mBAAmB,CAACc,OAAO,CAACC,SAAS,GAAGH,WAAW;MACnDZ,mBAAmB,CAACc,OAAO,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;MAEvD,MAAMnB,IAAI,GAAGJ,YAAY,CAACa,OAAO,CAACT,IAAI,CAACwB,YAAY,EAAEjB,WAAW,CAAC;MACjEP,IAAI,CAACF,EAAE,CAAC,QAAQ,EAAGuB,YAAY,IAAK;QAClC;QACA,MAAMC,mBAAmB,GAAG5B,cAAc,CAACe,OAAO,CAACC,SAAS;QAC5D,IAAIY,mBAAmB,EAAE;UACvB,MAAMX,MAAM,GAAGW,mBAAmB,CAACV,SAAS,CAAC,CAAC;UAC9CD,MAAM,CAACE,OAAO,CAACC,KAAK,IAAIA,KAAK,CAACC,IAAI,CAAC,CAAC,CAAC;QACvC;QAEArB,cAAc,CAACe,OAAO,CAACC,SAAS,GAAGW,YAAY;QAC/C3B,cAAc,CAACe,OAAO,CAACO,IAAI,CAAC,CAAC,CAACC,KAAK,CAACC,OAAO,CAACC,KAAK,CAAC;MACpD,CAAC,CAAC;IACJ,CAAC,CAAC;EACN,CAAC;EAED,oBACEhC,OAAA;IAAKsC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBvC,OAAA;MAAAuC,QAAA,GAAI,qBAAmB,EAACpC,MAAM;IAAA;MAAAqC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACpC3C,OAAA;MACE4C,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExC,iBAAkB;MACzByC,QAAQ,EAAEC,CAAC,IAAIzC,oBAAoB,CAACyC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MACpDI,WAAW,EAAC;IAAsB;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,eACF3C,OAAA;MAAQkD,OAAO,EAAEA,CAAA,KAAMrC,IAAI,CAACR,iBAAiB,CAAE;MAAAkC,QAAA,EAAC;IAAI;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAC7D3C,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAOmD,GAAG,EAAE3C,mBAAoB;QAAC4C,QAAQ;QAACC,KAAK;MAAA;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/C,CAAC,eACN3C,OAAA;MAAAuC,QAAA,eACEvC,OAAA;QAAOmD,GAAG,EAAE5C,cAAe;QAAC6C,QAAQ;MAAA;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzC,EAAA,CAzGID,SAAS;AAAAqD,EAAA,GAATrD,SAAS;AA2Gf,eAAeA,SAAS;AAAC,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}