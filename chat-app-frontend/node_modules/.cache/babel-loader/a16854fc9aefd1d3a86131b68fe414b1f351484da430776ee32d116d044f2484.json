{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreyas\\\\OneDrive\\\\Desktop\\\\BellaCode\\\\chat-app-frontend\\\\src\\\\components\\\\VidCall.js\",\n  _s = $RefreshSig$();\n// import React, { useEffect, useRef, useState } from 'react';\n// import Peer from 'peerjs';\n\n// const VideoCall = () => {\n//   const [peerId, setPeerId] = useState('');\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n//   const remoteVideoRef = useRef(null);\n//   const currentUserVideoRef = useRef(null);\n//   const peerInstance = useRef(null);\n\n//   useEffect(() => {\n//     const peer = new Peer();\n\n//     peer.on('open', (id) => {\n//       setPeerId(id);\n//     });\n\n//     peer.on('call', (call) => {\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//         .then((mediaStream) => {\n//           currentUserVideoRef.current.srcObject = mediaStream;\n//           currentUserVideoRef.current.play().catch(console.error);\n\n//           call.answer(mediaStream);\n\n//           call.on('stream', (remoteStream) => {\n//             remoteVideoRef.current.srcObject = remoteStream;\n//             remoteVideoRef.current.play().catch(console.error);\n//           });\n//         });\n//     });\n\n//     peerInstance.current = peer;\n\n//     return () => {\n//       peer.destroy();\n//       const currentStream = currentUserVideoRef.current.srcObject;\n//       if (currentStream) {\n//         const tracks = currentStream.getTracks();\n//         tracks.forEach(track => track.stop());\n//       }\n//       const remoteStreamElement = remoteVideoRef.current.srcObject;\n//       if (remoteStreamElement) {\n//         const tracks = remoteStreamElement.getTracks();\n//         tracks.forEach(track => track.stop());\n//       }\n//     };\n//   }, []);\n\n//   const call = (remotePeerId) => {\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\n//       .then((mediaStream) => {\n//         currentUserVideoRef.current.srcObject = mediaStream;\n//         currentUserVideoRef.current.play().catch(console.error);\n\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\n\n//         call.on('stream', (remoteStream) => {\n//           remoteVideoRef.current.srcObject = remoteStream;\n//           remoteVideoRef.current.play().catch(console.error);\n//         });\n//       });\n//   };\n\n//   const copyToClipboard = () => {\n//     navigator.clipboard.writeText(peerId).then(() => {\n//       alert('Peer ID copied to clipboard');\n//     });\n//   };\n\n//   return (\n//     <div className=\"flex flex-col items-center p-4 bg-gray-100 min-h-screen\">\n//       <header className=\"w-full bg-blue-500 text-white text-center p-4\">\n//         <h1 className=\"text-xl font-semibold\">Video Call</h1>\n//       </header>\n\n//       <div className=\"w-full max-w-2xl mt-4\">\n//         <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\">\n//           <div className=\"text-center\">\n//             <div className=\"text-lg font-medium mb-2\">Your ID</div>\n//             <div className=\"flex items-center justify-center\">\n//               <span className=\"bg-gray-200 p-2 rounded-lg\">{peerId}</span>\n//               <button \n//                 className=\"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\"\n//                 onClick={copyToClipboard}\n//               >\n//                 Copy\n//               </button>\n//             </div>\n//           </div>\n//         </div>\n\n//         <div className=\"mb-4\">\n//           <input\n//             type=\"text\"\n//             value={remotePeerIdValue}\n//             onChange={e => setRemotePeerIdValue(e.target.value)}\n//             placeholder=\"Enter remote peer ID\"\n//             className=\"border border-gray-300 p-2 rounded-lg w-full\"\n//           />\n//           <button\n//             onClick={() => call(remotePeerIdValue)}\n//             className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded-lg w-full\"\n//           >\n//             Start Call\n//           </button>\n//         </div>\n\n//         <div className=\"flex gap-4\">\n//           <div className=\"w-1/2\">\n//             <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-64 bg-gray-200\" />\n//           </div>\n//           <div className=\"w-1/2\">\n//             <video ref={remoteVideoRef} autoPlay className=\"w-full h-64 bg-gray-200\" />\n//           </div>\n//         </div>\n//       </div>\n//     </div>\n//   );\n// };\n\n// export default VideoCall;\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Peer from 'peerjs';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst VideoCall = () => {\n  _s();\n  const [peerId, setPeerId] = useState('');\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\n  const [chatMessages, setChatMessages] = useState([]);\n  const [newMessage, setNewMessage] = useState('');\n  const [isCalling, setIsCalling] = useState(false);\n  const [callInstance, setCallInstance] = useState(null);\n  const remoteVideoRef = useRef(null);\n  const currentUserVideoRef = useRef(null);\n  const peerInstance = useRef(null);\n  useEffect(() => {\n    const peer = new Peer();\n    peer.on('open', id => {\n      setPeerId(id);\n    });\n    peer.on('call', call => {\n      navigator.mediaDevices.getUserMedia({\n        video: true,\n        audio: true\n      }).then(mediaStream => {\n        currentUserVideoRef.current.srcObject = mediaStream;\n        currentUserVideoRef.current.play().catch(console.error);\n        call.answer(mediaStream);\n        call.on('stream', remoteStream => {\n          remoteVideoRef.current.srcObject = remoteStream;\n          remoteVideoRef.current.play().catch(console.error);\n        });\n        call.on('close', () => {\n          setIsCalling(false);\n          setCallInstance(null);\n        });\n        setIsCalling(true);\n        setCallInstance(call);\n      });\n    });\n    peerInstance.current = peer;\n    return () => {\n      peer.destroy();\n      const currentStream = currentUserVideoRef.current.srcObject;\n      if (currentStream) {\n        const tracks = currentStream.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n      const remoteStreamElement = remoteVideoRef.current.srcObject;\n      if (remoteStreamElement) {\n        const tracks = remoteStreamElement.getTracks();\n        tracks.forEach(track => track.stop());\n      }\n    };\n  }, []);\n  const call = remotePeerId => {\n    navigator.mediaDevices.getUserMedia({\n      video: true,\n      audio: true\n    }).then(mediaStream => {\n      currentUserVideoRef.current.srcObject = mediaStream;\n      currentUserVideoRef.current.play().catch(console.error);\n      const call = peerInstance.current.call(remotePeerId, mediaStream);\n      setIsCalling(true);\n      setCallInstance(call);\n      call.on('stream', remoteStream => {\n        remoteVideoRef.current.srcObject = remoteStream;\n        remoteVideoRef.current.play().catch(console.error);\n      });\n      call.on('close', () => {\n        setIsCalling(false);\n        setCallInstance(null);\n      });\n    });\n  };\n  const endCall = () => {\n    if (callInstance) {\n      callInstance.close();\n      setIsCalling(false);\n      setCallInstance(null);\n    }\n  };\n  const copyToClipboard = () => {\n    navigator.clipboard.writeText(peerId).then(() => {\n      alert('Peer ID copied to clipboard');\n    });\n  };\n  const sendMessage = () => {\n    if (newMessage.trim()) {\n      setChatMessages([...chatMessages, {\n        text: newMessage,\n        sender: 'You'\n      }]);\n      setNewMessage('');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex min-h-screen\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-1/4 bg-gray-100 p-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow-lg rounded-lg p-4 mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-lg font-medium mb-2\",\n          children: \"Chat\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 236,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\",\n          children: chatMessages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: `inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`,\n              children: msg.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: newMessage,\n            onChange: e => setNewMessage(e.target.value),\n            placeholder: \"Type a message\",\n            className: \"border border-gray-300 p-2 rounded-lg w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: sendMessage,\n            className: \"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\",\n            children: \"Send\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 246,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 235,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex-1 p-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"w-full bg-blue-500 text-white text-center p-4\",\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"text-xl font-semibold\",\n          children: \"Video Call\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full max-w-2xl mt-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-center\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"text-lg font-medium mb-2\",\n              children: \"Your ID\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 271,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-center\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                className: \"bg-gray-200 p-2 rounded-lg\",\n                children: peerId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\",\n                onClick: copyToClipboard,\n                children: \"Copy\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 274,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"mb-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: remotePeerIdValue,\n            onChange: e => setRemotePeerIdValue(e.target.value),\n            placeholder: \"Enter remote peer ID\",\n            className: \"border border-gray-300 p-2 rounded-lg w-full\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => isCalling ? endCall() : call(remotePeerIdValue),\n            className: `mt-2 px-4 py-2 ${isCalling ? 'bg-red-500' : 'bg-green-500'} text-white rounded-lg w-full`,\n            children: isCalling ? 'End Call' : 'Start Call'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex gap-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: currentUserVideoRef,\n              autoPlay: true,\n              muted: true,\n              className: \"w-full h-64 bg-gray-200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 302,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 301,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"w-1/2\",\n            children: /*#__PURE__*/_jsxDEV(\"video\", {\n              ref: remoteVideoRef,\n              autoPlay: true,\n              className: \"w-full h-64 bg-gray-200\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 305,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 304,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 300,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 233,\n    columnNumber: 5\n  }, this);\n};\n_s(VideoCall, \"fDBcZG5F9C5paAI9L6pro1bZ/XI=\");\n_c = VideoCall;\nexport default VideoCall;\nvar _c;\n$RefreshReg$(_c, \"VideoCall\");","map":{"version":3,"names":["React","useEffect","useRef","useState","Peer","jsxDEV","_jsxDEV","VideoCall","_s","peerId","setPeerId","remotePeerIdValue","setRemotePeerIdValue","chatMessages","setChatMessages","newMessage","setNewMessage","isCalling","setIsCalling","callInstance","setCallInstance","remoteVideoRef","currentUserVideoRef","peerInstance","peer","on","id","call","navigator","mediaDevices","getUserMedia","video","audio","then","mediaStream","current","srcObject","play","catch","console","error","answer","remoteStream","destroy","currentStream","tracks","getTracks","forEach","track","stop","remoteStreamElement","remotePeerId","endCall","close","copyToClipboard","clipboard","writeText","alert","sendMessage","trim","text","sender","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","type","value","onChange","e","target","placeholder","onClick","ref","autoPlay","muted","_c","$RefreshReg$"],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/VidCall.js"],"sourcesContent":["\r\n\r\n// import React, { useEffect, useRef, useState } from 'react';\r\n// import Peer from 'peerjs';\r\n\r\n// const VideoCall = () => {\r\n//   const [peerId, setPeerId] = useState('');\r\n//   const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n//   const remoteVideoRef = useRef(null);\r\n//   const currentUserVideoRef = useRef(null);\r\n//   const peerInstance = useRef(null);\r\n\r\n//   useEffect(() => {\r\n//     const peer = new Peer();\r\n\r\n//     peer.on('open', (id) => {\r\n//       setPeerId(id);\r\n//     });\r\n\r\n//     peer.on('call', (call) => {\r\n//       navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//         .then((mediaStream) => {\r\n//           currentUserVideoRef.current.srcObject = mediaStream;\r\n//           currentUserVideoRef.current.play().catch(console.error);\r\n\r\n//           call.answer(mediaStream);\r\n          \r\n//           call.on('stream', (remoteStream) => {\r\n//             remoteVideoRef.current.srcObject = remoteStream;\r\n//             remoteVideoRef.current.play().catch(console.error);\r\n//           });\r\n//         });\r\n//     });\r\n\r\n//     peerInstance.current = peer;\r\n\r\n//     return () => {\r\n//       peer.destroy();\r\n//       const currentStream = currentUserVideoRef.current.srcObject;\r\n//       if (currentStream) {\r\n//         const tracks = currentStream.getTracks();\r\n//         tracks.forEach(track => track.stop());\r\n//       }\r\n//       const remoteStreamElement = remoteVideoRef.current.srcObject;\r\n//       if (remoteStreamElement) {\r\n//         const tracks = remoteStreamElement.getTracks();\r\n//         tracks.forEach(track => track.stop());\r\n//       }\r\n//     };\r\n//   }, []);\r\n\r\n//   const call = (remotePeerId) => {\r\n//     navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n//       .then((mediaStream) => {\r\n//         currentUserVideoRef.current.srcObject = mediaStream;\r\n//         currentUserVideoRef.current.play().catch(console.error);\r\n\r\n//         const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n\r\n//         call.on('stream', (remoteStream) => {\r\n//           remoteVideoRef.current.srcObject = remoteStream;\r\n//           remoteVideoRef.current.play().catch(console.error);\r\n//         });\r\n//       });\r\n//   };\r\n\r\n//   const copyToClipboard = () => {\r\n//     navigator.clipboard.writeText(peerId).then(() => {\r\n//       alert('Peer ID copied to clipboard');\r\n//     });\r\n//   };\r\n\r\n//   return (\r\n//     <div className=\"flex flex-col items-center p-4 bg-gray-100 min-h-screen\">\r\n//       <header className=\"w-full bg-blue-500 text-white text-center p-4\">\r\n//         <h1 className=\"text-xl font-semibold\">Video Call</h1>\r\n//       </header>\r\n      \r\n//       <div className=\"w-full max-w-2xl mt-4\">\r\n//         <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\">\r\n//           <div className=\"text-center\">\r\n//             <div className=\"text-lg font-medium mb-2\">Your ID</div>\r\n//             <div className=\"flex items-center justify-center\">\r\n//               <span className=\"bg-gray-200 p-2 rounded-lg\">{peerId}</span>\r\n//               <button \r\n//                 className=\"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\"\r\n//                 onClick={copyToClipboard}\r\n//               >\r\n//                 Copy\r\n//               </button>\r\n//             </div>\r\n//           </div>\r\n//         </div>\r\n        \r\n//         <div className=\"mb-4\">\r\n//           <input\r\n//             type=\"text\"\r\n//             value={remotePeerIdValue}\r\n//             onChange={e => setRemotePeerIdValue(e.target.value)}\r\n//             placeholder=\"Enter remote peer ID\"\r\n//             className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n//           />\r\n//           <button\r\n//             onClick={() => call(remotePeerIdValue)}\r\n//             className=\"mt-2 px-4 py-2 bg-green-500 text-white rounded-lg w-full\"\r\n//           >\r\n//             Start Call\r\n//           </button>\r\n//         </div>\r\n\r\n//         <div className=\"flex gap-4\">\r\n//           <div className=\"w-1/2\">\r\n//             <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-64 bg-gray-200\" />\r\n//           </div>\r\n//           <div className=\"w-1/2\">\r\n//             <video ref={remoteVideoRef} autoPlay className=\"w-full h-64 bg-gray-200\" />\r\n//           </div>\r\n//         </div>\r\n//       </div>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default VideoCall;\r\n\r\n\r\nimport React, { useEffect, useRef, useState } from 'react';\r\nimport Peer from 'peerjs';\r\n\r\nconst VideoCall = () => {\r\n  const [peerId, setPeerId] = useState('');\r\n  const [remotePeerIdValue, setRemotePeerIdValue] = useState('');\r\n  const [chatMessages, setChatMessages] = useState([]);\r\n  const [newMessage, setNewMessage] = useState('');\r\n  const [isCalling, setIsCalling] = useState(false);\r\n  const [callInstance, setCallInstance] = useState(null);\r\n  \r\n  const remoteVideoRef = useRef(null);\r\n  const currentUserVideoRef = useRef(null);\r\n  const peerInstance = useRef(null);\r\n\r\n  useEffect(() => {\r\n    const peer = new Peer();\r\n\r\n    peer.on('open', (id) => {\r\n      setPeerId(id);\r\n    });\r\n\r\n    peer.on('call', (call) => {\r\n      navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n        .then((mediaStream) => {\r\n          currentUserVideoRef.current.srcObject = mediaStream;\r\n          currentUserVideoRef.current.play().catch(console.error);\r\n\r\n          call.answer(mediaStream);\r\n          \r\n          call.on('stream', (remoteStream) => {\r\n            remoteVideoRef.current.srcObject = remoteStream;\r\n            remoteVideoRef.current.play().catch(console.error);\r\n          });\r\n\r\n          call.on('close', () => {\r\n            setIsCalling(false);\r\n            setCallInstance(null);\r\n          });\r\n          \r\n          setIsCalling(true);\r\n          setCallInstance(call);\r\n        });\r\n    });\r\n\r\n    peerInstance.current = peer;\r\n\r\n    return () => {\r\n      peer.destroy();\r\n      const currentStream = currentUserVideoRef.current.srcObject;\r\n      if (currentStream) {\r\n        const tracks = currentStream.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n      const remoteStreamElement = remoteVideoRef.current.srcObject;\r\n      if (remoteStreamElement) {\r\n        const tracks = remoteStreamElement.getTracks();\r\n        tracks.forEach(track => track.stop());\r\n      }\r\n    };\r\n  }, []);\r\n\r\n  const call = (remotePeerId) => {\r\n    navigator.mediaDevices.getUserMedia({ video: true, audio: true })\r\n      .then((mediaStream) => {\r\n        currentUserVideoRef.current.srcObject = mediaStream;\r\n        currentUserVideoRef.current.play().catch(console.error);\r\n\r\n        const call = peerInstance.current.call(remotePeerId, mediaStream);\r\n        setIsCalling(true);\r\n        setCallInstance(call);\r\n\r\n        call.on('stream', (remoteStream) => {\r\n          remoteVideoRef.current.srcObject = remoteStream;\r\n          remoteVideoRef.current.play().catch(console.error);\r\n        });\r\n\r\n        call.on('close', () => {\r\n          setIsCalling(false);\r\n          setCallInstance(null);\r\n        });\r\n      });\r\n  };\r\n\r\n  const endCall = () => {\r\n    if (callInstance) {\r\n      callInstance.close();\r\n      setIsCalling(false);\r\n      setCallInstance(null);\r\n    }\r\n  };\r\n\r\n  const copyToClipboard = () => {\r\n    navigator.clipboard.writeText(peerId).then(() => {\r\n      alert('Peer ID copied to clipboard');\r\n    });\r\n  };\r\n\r\n  const sendMessage = () => {\r\n    if (newMessage.trim()) {\r\n      setChatMessages([...chatMessages, { text: newMessage, sender: 'You' }]);\r\n      setNewMessage('');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"flex min-h-screen\">\r\n      <div className=\"w-1/4 bg-gray-100 p-4\">\r\n        <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4\">\r\n          <div className=\"text-lg font-medium mb-2\">Chat</div>\r\n          <div className=\"overflow-y-auto h-64 mb-2 border border-gray-300 p-2 rounded-lg bg-gray-50\">\r\n            {chatMessages.map((msg, index) => (\r\n              <div key={index} className={`mb-2 p-2 ${msg.sender === 'You' ? 'text-right' : 'text-left'}`}>\r\n                <div className={`inline-block px-3 py-1 rounded-lg ${msg.sender === 'You' ? 'bg-blue-500 text-white' : 'bg-gray-300'}`}>\r\n                  {msg.text}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n          <div className=\"flex\">\r\n            <input\r\n              type=\"text\"\r\n              value={newMessage}\r\n              onChange={e => setNewMessage(e.target.value)}\r\n              placeholder=\"Type a message\"\r\n              className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n            />\r\n            <button\r\n              onClick={sendMessage}\r\n              className=\"ml-2 px-4 py-2 bg-blue-500 text-white rounded-lg\"\r\n            >\r\n              Send\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <div className=\"flex-1 p-4\">\r\n        <header className=\"w-full bg-blue-500 text-white text-center p-4\">\r\n          <h1 className=\"text-xl font-semibold\">Video Call</h1>\r\n        </header>\r\n        \r\n        <div className=\"w-full max-w-2xl mt-4\">\r\n          <div className=\"bg-white shadow-lg rounded-lg p-4 mb-4 flex items-center justify-between\">\r\n            <div className=\"text-center\">\r\n              <div className=\"text-lg font-medium mb-2\">Your ID</div>\r\n              <div className=\"flex items-center justify-center\">\r\n                <span className=\"bg-gray-200 p-2 rounded-lg\">{peerId}</span>\r\n                <button \r\n                  className=\"ml-2 px-2 py-1 bg-blue-600 text-white rounded-lg\"\r\n                  onClick={copyToClipboard}\r\n                >\r\n                  Copy\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          \r\n          <div className=\"mb-4\">\r\n            <input\r\n              type=\"text\"\r\n              value={remotePeerIdValue}\r\n              onChange={e => setRemotePeerIdValue(e.target.value)}\r\n              placeholder=\"Enter remote peer ID\"\r\n              className=\"border border-gray-300 p-2 rounded-lg w-full\"\r\n            />\r\n            <button\r\n              onClick={() => isCalling ? endCall() : call(remotePeerIdValue)}\r\n              className={`mt-2 px-4 py-2 ${isCalling ? 'bg-red-500' : 'bg-green-500'} text-white rounded-lg w-full`}\r\n            >\r\n              {isCalling ? 'End Call' : 'Start Call'}\r\n            </button>\r\n          </div>\r\n\r\n          <div className=\"flex gap-4\">\r\n            <div className=\"w-1/2\">\r\n              <video ref={currentUserVideoRef} autoPlay muted className=\"w-full h-64 bg-gray-200\" />\r\n            </div>\r\n            <div className=\"w-1/2\">\r\n              <video ref={remoteVideoRef} autoPlay className=\"w-full h-64 bg-gray-200\" />\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoCall;\r\n"],"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}