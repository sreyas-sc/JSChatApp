{"ast":null,"code":"// import React, { useEffect, useState } from 'react';\n// import axios from 'axios';\n// import { useNavigate } from 'react-router-dom';\n// import debounce from 'lodash/debounce';\n// import { ChatAlt2Icon } from '@heroicons/react/solid';\n// const Home = () => {\n//     const [userList, setUserList] = useState([]);\n//     const [error, setError] = useState('');\n//     const [searchTerm, setSearchTerm] = useState('');\n//     const navigate = useNavigate();\n//     const userId = localStorage.getItem('userId');\n\n//     useEffect(() => {\n//         const fetchUsers = async () => {\n//             if (!userId) return;\n\n//             try {\n//                 const response = await axios.get('http://localhost:3001/usersWhoMessaged', {\n//                     params: { userId }\n//                 });\n\n//                 console.log('Fetched users:', response.data);\n\n//                 if (response.data && Array.isArray(response.data)) {\n//                     setUserList(response.data);\n//                 } else {\n//                     console.error('Unexpected response format:', response.data);\n//                     setError('Unexpected response format');\n//                 }\n//             } catch (err) {\n//                 console.error('Error fetching users:', err);\n//                 setError('Error fetching users');\n//             }\n//         };\n\n//         fetchUsers();\n//     }, [userId]);\n\n//     const handleLogout = () => {\n//         localStorage.removeItem('userId');\n//         localStorage.removeItem('userEmail');\n//         navigate('/');\n//     };\n\n//     const debouncedSearch = debounce(async (term) => {\n//         if (term.trim()) {\n//             try {\n//                 const response = await axios.get('http://localhost:3001/users', {\n//                     params: { search: term, userId }\n//                 });\n//                 setUserList(response.data);\n//             } catch (err) {\n//                 console.error('Error searching users:', err);\n//                 setError('Failed to search users.');\n//             }\n//         } else {\n//             setUserList([]);\n//         }\n//     }, 300);\n\n//     useEffect(() => {\n//         debouncedSearch(searchTerm);\n//     }, [searchTerm]);\n\n//     const handleMessageUser = async (user) => {\n//         try {\n//             navigate(`/chat/${user.username}`);\n//             localStorage.setItem('touserId', user.id);\n//             localStorage.setItem('tousername', user.username);\n//             localStorage.setItem('touserEmail', user.email);\n\n//             console.log('Sender ID:', localStorage.getItem('userId'));\n//             console.log('Receiver ID:', localStorage.getItem('touserId'));\n//         } catch (err) {\n//             console.error('Error starting conversation:', err);\n//             setError('Failed to start conversation.');\n//         }\n//     };\n\n//     const formatDate = (dateString) => {\n//         const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\n//         return new Date(dateString).toLocaleDateString('en-US', options);\n//     };\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-slate-300 to-slate-500\">\n//             {/* User Profile */}\n//             <div className=\"w-full px-4 flex justify-end mt-4\">\n//                 <button\n//                     onClick={handleLogout}\n//                     className=\"group flex items-center justify-start w-11 h-11 bg-red-600 rounded-full cursor-pointer relative overflow-hidden transition-all duration-200 shadow-lg hover:w-32 hover:rounded-lg active:translate-x-1 active:translate-y-1\"\n//                 >\n//                     <div className=\"flex items-center justify-center w-full transition-all duration-300 group-hover:justify-start group-hover:px-3\">\n//                         <svg className=\"w-4 h-4\" viewBox=\"0 0 512 512\" fill=\"white\">\n//                             <path d=\"M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"></path>\n//                         </svg>\n//                     </div>\n//                     <div className=\"absolute right-5 transform translate-x-full opacity-0 text-white text-lg font-semibold transition-all duration-300 group-hover:translate-x-0 group-hover:opacity-100\">\n//                         Logout\n//                     </div>\n//                 </button>\n//             </div>\n\n//             <h1 className=\"text-3xl font-bold mb-4 pt-1 bg-gradient-to-r from-emerald-100 to-indigo-200 bg-clip-text text-transparent\">GoFIBER</h1>\n\n//             <div className=\"relative flex items-center justify-center mt-4\">\n//                 <div className=\"p-5 overflow-hidden w-[60px] h-[60px] hover:w-[270px] bg-[#7292ec] shadow-[2px_2px_20px_rgba(0,0,0,0.08)] rounded-full flex group items-center hover:duration-300 duration-300\">\n//                     <div className=\"flex items-center justify-center fill-white\">\n//                         <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Isolation_Mode\" data-name=\"Isolation Mode\" viewBox=\"0 0 24 24\" width=\"22\" height=\"22\">\n//                             <path d=\"M18.9,16.776A10.539,10.539,0,1,0,16.776,18.9l5.1,5.1L24,21.88ZM10.5,18A7.5,7.5,0,1,1,18,10.5,7.507,7.507,0,0,1,10.5,18Z\"></path>\n//                         </svg>\n//                     </div>\n//                     <input\n//                         type=\"text\"\n//                         className=\"outline-none text-[20px] bg-transparent w-full text-white font-normal px-4\"\n//                         value={searchTerm}\n//                         onChange={(e) => setSearchTerm(e.target.value)}\n//                         placeholder=\"Search for a user\"\n//                     />\n//                 </div>\n//             </div>\n\n//             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\n\n//             {userList.length > 0 ? (\n//                 <div className=\"w-full max-w-md mt-4\">\n//                     {/* <h2 className=\"text-2xl font-bold mb-4\">Users</h2> */}\n//                     <ul>\n//                         {userList.map((user) => (\n//                             <li key={user.id} className=\"bg-gray-100 p-4 mb-2 rounded shadow w-full max-w-xl\">\n//                                 {/* <p className=\"font-semibold\">{user.username}</p> */}\n//                                 <div className=\"flex justify-between items-center\">\n//                                 <p className=\"font-semibold\">{user.username}</p>\n//                                 <p>{user.lastMessage}</p>\n//                                 <span>{new Date(user.lastMessageDate).toLocaleString()}</span>\n//                                 {/* <span className=\"text-sm text-gray-500\">{user.lastMessageDate ? formatDate(user.lastMessageDate) : 'No messages yet'}</span> */}\n//                             </div>\n//                                 {/* Remove lastMessageDate reference */}\n//                                 <button\n//                                     onClick={() => handleMessageUser(user)}\n//                                     className=\"mt-2 bg-green-500 text-white py-2 px-4 rounded\"\n//                                 >\n//                                    <ChatAlt2Icon className=\"w-6 h-6\" />\n//                                 </button>\n//                             </li>\n//                         ))}\n//                     </ul>\n//                 </div>\n//             ) : (\n//                 <p className=\"text-gray-500 mt-4\">No users found who have messaged you.</p>\n//             )}\n//         </div>\n//     );\n// };\n\n// export default Home;","map":{"version":3,"names":[],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/Home.js"],"sourcesContent":["    // import React, { useEffect, useState } from 'react';\r\n    // import axios from 'axios';\r\n    // import { useNavigate } from 'react-router-dom';\r\n    // import debounce from 'lodash/debounce';\r\n    // import { ChatAlt2Icon } from '@heroicons/react/solid';\r\n    // const Home = () => {\r\n    //     const [userList, setUserList] = useState([]);\r\n    //     const [error, setError] = useState('');\r\n    //     const [searchTerm, setSearchTerm] = useState('');\r\n    //     const navigate = useNavigate();\r\n    //     const userId = localStorage.getItem('userId');\r\n\r\n    //     useEffect(() => {\r\n    //         const fetchUsers = async () => {\r\n    //             if (!userId) return;\r\n\r\n    //             try {\r\n    //                 const response = await axios.get('http://localhost:3001/usersWhoMessaged', {\r\n    //                     params: { userId }\r\n    //                 });\r\n\r\n    //                 console.log('Fetched users:', response.data);\r\n\r\n    //                 if (response.data && Array.isArray(response.data)) {\r\n    //                     setUserList(response.data);\r\n    //                 } else {\r\n    //                     console.error('Unexpected response format:', response.data);\r\n    //                     setError('Unexpected response format');\r\n    //                 }\r\n    //             } catch (err) {\r\n    //                 console.error('Error fetching users:', err);\r\n    //                 setError('Error fetching users');\r\n    //             }\r\n    //         };\r\n\r\n    //         fetchUsers();\r\n    //     }, [userId]);\r\n\r\n    //     const handleLogout = () => {\r\n    //         localStorage.removeItem('userId');\r\n    //         localStorage.removeItem('userEmail');\r\n    //         navigate('/');\r\n    //     };\r\n\r\n    //     const debouncedSearch = debounce(async (term) => {\r\n    //         if (term.trim()) {\r\n    //             try {\r\n    //                 const response = await axios.get('http://localhost:3001/users', {\r\n    //                     params: { search: term, userId }\r\n    //                 });\r\n    //                 setUserList(response.data);\r\n    //             } catch (err) {\r\n    //                 console.error('Error searching users:', err);\r\n    //                 setError('Failed to search users.');\r\n    //             }\r\n    //         } else {\r\n    //             setUserList([]);\r\n    //         }\r\n    //     }, 300);\r\n\r\n    //     useEffect(() => {\r\n    //         debouncedSearch(searchTerm);\r\n    //     }, [searchTerm]);\r\n\r\n    //     const handleMessageUser = async (user) => {\r\n    //         try {\r\n    //             navigate(`/chat/${user.username}`);\r\n    //             localStorage.setItem('touserId', user.id);\r\n    //             localStorage.setItem('tousername', user.username);\r\n    //             localStorage.setItem('touserEmail', user.email);\r\n\r\n    //             console.log('Sender ID:', localStorage.getItem('userId'));\r\n    //             console.log('Receiver ID:', localStorage.getItem('touserId'));\r\n    //         } catch (err) {\r\n    //             console.error('Error starting conversation:', err);\r\n    //             setError('Failed to start conversation.');\r\n    //         }\r\n    //     };\r\n\r\n    //     const formatDate = (dateString) => {\r\n    //         const options = { year: 'numeric', month: 'short', day: 'numeric', hour: 'numeric', minute: 'numeric', second: 'numeric' };\r\n    //         return new Date(dateString).toLocaleDateString('en-US', options);\r\n    //     };\r\n\r\n    //     return (\r\n    //         <div className=\"min-h-screen flex flex-col items-center bg-gradient-to-r from-slate-300 to-slate-500\">\r\n    //             {/* User Profile */}\r\n    //             <div className=\"w-full px-4 flex justify-end mt-4\">\r\n    //                 <button\r\n    //                     onClick={handleLogout}\r\n    //                     className=\"group flex items-center justify-start w-11 h-11 bg-red-600 rounded-full cursor-pointer relative overflow-hidden transition-all duration-200 shadow-lg hover:w-32 hover:rounded-lg active:translate-x-1 active:translate-y-1\"\r\n    //                 >\r\n    //                     <div className=\"flex items-center justify-center w-full transition-all duration-300 group-hover:justify-start group-hover:px-3\">\r\n    //                         <svg className=\"w-4 h-4\" viewBox=\"0 0 512 512\" fill=\"white\">\r\n    //                             <path d=\"M377.9 105.9L500.7 228.7c7.2 7.2 11.3 17.1 11.3 27.3s-4.1 20.1-11.3 27.3L377.9 406.1c-6.4 6.4-15 9.9-24 9.9c-18.7 0-33.9-15.2-33.9-33.9l0-62.1-128 0c-17.7 0-32-14.3-32-32l0-64c0-17.7 14.3-32 32-32l128 0 0-62.1c0-18.7 15.2-33.9 33.9-33.9c9 0 17.6 3.6 24 9.9zM160 96L96 96c-17.7 0-32 14.3-32 32l0 256c0 17.7 14.3 32 32 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32l-64 0c-53 0-96-43-96-96L0 128C0 75 43 32 96 32l64 0c17.7 0 32 14.3 32 32s-14.3 32-32 32z\"></path>\r\n    //                         </svg>\r\n    //                     </div>\r\n    //                     <div className=\"absolute right-5 transform translate-x-full opacity-0 text-white text-lg font-semibold transition-all duration-300 group-hover:translate-x-0 group-hover:opacity-100\">\r\n    //                         Logout\r\n    //                     </div>\r\n    //                 </button>\r\n    //             </div>\r\n\r\n    //             <h1 className=\"text-3xl font-bold mb-4 pt-1 bg-gradient-to-r from-emerald-100 to-indigo-200 bg-clip-text text-transparent\">GoFIBER</h1>\r\n\r\n    //             <div className=\"relative flex items-center justify-center mt-4\">\r\n    //                 <div className=\"p-5 overflow-hidden w-[60px] h-[60px] hover:w-[270px] bg-[#7292ec] shadow-[2px_2px_20px_rgba(0,0,0,0.08)] rounded-full flex group items-center hover:duration-300 duration-300\">\r\n    //                     <div className=\"flex items-center justify-center fill-white\">\r\n    //                         <svg xmlns=\"http://www.w3.org/2000/svg\" id=\"Isolation_Mode\" data-name=\"Isolation Mode\" viewBox=\"0 0 24 24\" width=\"22\" height=\"22\">\r\n    //                             <path d=\"M18.9,16.776A10.539,10.539,0,1,0,16.776,18.9l5.1,5.1L24,21.88ZM10.5,18A7.5,7.5,0,1,1,18,10.5,7.507,7.507,0,0,1,10.5,18Z\"></path>\r\n    //                         </svg>\r\n    //                     </div>\r\n    //                     <input\r\n    //                         type=\"text\"\r\n    //                         className=\"outline-none text-[20px] bg-transparent w-full text-white font-normal px-4\"\r\n    //                         value={searchTerm}\r\n    //                         onChange={(e) => setSearchTerm(e.target.value)}\r\n    //                         placeholder=\"Search for a user\"\r\n    //                     />\r\n    //                 </div>\r\n    //             </div>\r\n\r\n    //             {error && <p className=\"text-red-500 mb-4\">{error}</p>}\r\n\r\n    //             {userList.length > 0 ? (\r\n    //                 <div className=\"w-full max-w-md mt-4\">\r\n    //                     {/* <h2 className=\"text-2xl font-bold mb-4\">Users</h2> */}\r\n    //                     <ul>\r\n    //                         {userList.map((user) => (\r\n    //                             <li key={user.id} className=\"bg-gray-100 p-4 mb-2 rounded shadow w-full max-w-xl\">\r\n    //                                 {/* <p className=\"font-semibold\">{user.username}</p> */}\r\n    //                                 <div className=\"flex justify-between items-center\">\r\n    //                                 <p className=\"font-semibold\">{user.username}</p>\r\n    //                                 <p>{user.lastMessage}</p>\r\n    //                                 <span>{new Date(user.lastMessageDate).toLocaleString()}</span>\r\n    //                                 {/* <span className=\"text-sm text-gray-500\">{user.lastMessageDate ? formatDate(user.lastMessageDate) : 'No messages yet'}</span> */}\r\n    //                             </div>\r\n    //                                 {/* Remove lastMessageDate reference */}\r\n    //                                 <button\r\n    //                                     onClick={() => handleMessageUser(user)}\r\n    //                                     className=\"mt-2 bg-green-500 text-white py-2 px-4 rounded\"\r\n    //                                 >\r\n    //                                    <ChatAlt2Icon className=\"w-6 h-6\" />\r\n    //                                 </button>\r\n    //                             </li>\r\n    //                         ))}\r\n    //                     </ul>\r\n    //                 </div>\r\n    //             ) : (\r\n    //                 <p className=\"text-gray-500 mt-4\">No users found who have messaged you.</p>\r\n    //             )}\r\n    //         </div>\r\n    //     );\r\n    // };\r\n\r\n    // export default Home;\r\n\r\n    "],"mappings":"AAAI;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}