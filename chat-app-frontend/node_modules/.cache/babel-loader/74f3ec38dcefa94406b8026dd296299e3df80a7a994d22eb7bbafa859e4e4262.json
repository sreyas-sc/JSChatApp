{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreyas\\\\OneDrive\\\\Desktop\\\\BellaCode\\\\chat-app-frontend\\\\src\\\\components\\\\Videocall.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport 'webrtc-adapter';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst socket = io('http://localhost:3001'); // Replace with your server URL\n\nconst Videocall = () => {\n  _s();\n  const [localStream, setLocalStream] = useState(null);\n  const [remoteStream, setRemoteStream] = useState(null);\n  const [peerConnection, setPeerConnection] = useState(null);\n  const navigate = useNavigate();\n  const localVideoRef = useRef(null);\n  const remoteVideoRef = useRef(null);\n  useEffect(() => {\n    const setupWebRTC = async () => {\n      const pc = new RTCPeerConnection();\n      setPeerConnection(pc);\n      pc.ontrack = event => {\n        setRemoteStream(event.streams[0]);\n      };\n      pc.onicecandidate = event => {\n        if (event.candidate) {\n          socket.emit('iceCandidate', {\n            candidate: event.candidate\n          });\n        }\n      };\n      try {\n        const stream = await navigator.mediaDevices.getUserMedia({\n          audio: true,\n          video: true\n        });\n        setLocalStream(stream);\n        localVideoRef.current.srcObject = stream;\n        stream.getTracks().forEach(track => pc.addTrack(track, stream));\n      } catch (error) {\n        console.error('Error getting local media:', error);\n      }\n      socket.on('callOffer', async offer => {\n        await pc.setRemoteDescription(new RTCSessionDescription(offer));\n        const answer = await pc.createAnswer();\n        await pc.setLocalDescription(answer);\n        socket.emit('callAnswer', {\n          answer\n        });\n      });\n      socket.on('callAnswer', async answer => {\n        await pc.setRemoteDescription(new RTCSessionDescription(answer));\n      });\n      socket.on('iceCandidate', async candidate => {\n        try {\n          await pc.addIceCandidate(new RTCIceCandidate(candidate));\n        } catch (error) {\n          console.error('Error adding ICE candidate:', error);\n        }\n      });\n      return () => {\n        socket.off('callOffer');\n        socket.off('callAnswer');\n        socket.off('iceCandidate');\n        pc.close();\n        localStream === null || localStream === void 0 ? void 0 : localStream.getTracks().forEach(track => track.stop());\n      };\n    };\n    setupWebRTC();\n    return () => {\n      // Clean up WebRTC connection on unmount\n    };\n  }, []);\n  const handleEndCall = () => {\n    if (peerConnection) {\n      peerConnection.close();\n      setPeerConnection(null);\n    }\n    if (localStream) {\n      localStream.getTracks().forEach(track => track.stop());\n      setLocalStream(null);\n    }\n    if (remoteStream) {\n      setRemoteStream(null);\n    }\n    navigate('/chat'); // Navigate back to the chat page\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleEndCall,\n      children: \"End Call\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"video\", {\n        ref: localVideoRef,\n        autoPlay: true,\n        muted: true,\n        style: {\n          width: '300px',\n          height: '200px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n        ref: remoteVideoRef,\n        autoPlay: true,\n        style: {\n          width: '600px',\n          height: '400px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 9\n  }, this);\n};\n_s(Videocall, \"oc2NfVzy5siYZUC1wbY0h2xcfjQ=\", false, function () {\n  return [useNavigate];\n});\n_c = Videocall;\nexport default Videocall;\nvar _c;\n$RefreshReg$(_c, \"Videocall\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","io","jsxDEV","_jsxDEV","socket","Videocall","_s","localStream","setLocalStream","remoteStream","setRemoteStream","peerConnection","setPeerConnection","navigate","localVideoRef","remoteVideoRef","setupWebRTC","pc","RTCPeerConnection","ontrack","event","streams","onicecandidate","candidate","emit","stream","navigator","mediaDevices","getUserMedia","audio","video","current","srcObject","getTracks","forEach","track","addTrack","error","console","on","offer","setRemoteDescription","RTCSessionDescription","answer","createAnswer","setLocalDescription","addIceCandidate","RTCIceCandidate","off","close","stop","handleEndCall","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","ref","autoPlay","muted","style","width","height","_c","$RefreshReg$"],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/Videocall.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { io } from 'socket.io-client';\r\nimport 'webrtc-adapter';\r\n\r\nconst socket = io('http://localhost:3001'); // Replace with your server URL\r\n\r\nconst Videocall = () => {\r\n    const [localStream, setLocalStream] = useState(null);\r\n    const [remoteStream, setRemoteStream] = useState(null);\r\n    const [peerConnection, setPeerConnection] = useState(null);\r\n    const navigate = useNavigate();\r\n\r\n    const localVideoRef = useRef(null);\r\n    const remoteVideoRef = useRef(null);\r\n\r\n    useEffect(() => {\r\n        const setupWebRTC = async () => {\r\n            const pc = new RTCPeerConnection();\r\n            setPeerConnection(pc);\r\n\r\n            pc.ontrack = (event) => {\r\n                setRemoteStream(event.streams[0]);\r\n            };\r\n\r\n            pc.onicecandidate = (event) => {\r\n                if (event.candidate) {\r\n                    socket.emit('iceCandidate', { candidate: event.candidate });\r\n                }\r\n            };\r\n\r\n            try {\r\n                const stream = await navigator.mediaDevices.getUserMedia({ audio: true, video: true });\r\n                setLocalStream(stream);\r\n                localVideoRef.current.srcObject = stream;\r\n                stream.getTracks().forEach(track => pc.addTrack(track, stream));\r\n            } catch (error) {\r\n                console.error('Error getting local media:', error);\r\n            }\r\n\r\n            socket.on('callOffer', async (offer) => {\r\n                await pc.setRemoteDescription(new RTCSessionDescription(offer));\r\n                const answer = await pc.createAnswer();\r\n                await pc.setLocalDescription(answer);\r\n                socket.emit('callAnswer', { answer });\r\n            });\r\n\r\n            socket.on('callAnswer', async (answer) => {\r\n                await pc.setRemoteDescription(new RTCSessionDescription(answer));\r\n            });\r\n\r\n            socket.on('iceCandidate', async (candidate) => {\r\n                try {\r\n                    await pc.addIceCandidate(new RTCIceCandidate(candidate));\r\n                } catch (error) {\r\n                    console.error('Error adding ICE candidate:', error);\r\n                }\r\n            });\r\n\r\n            return () => {\r\n                socket.off('callOffer');\r\n                socket.off('callAnswer');\r\n                socket.off('iceCandidate');\r\n                pc.close();\r\n                localStream?.getTracks().forEach(track => track.stop());\r\n            };\r\n        };\r\n\r\n        setupWebRTC();\r\n\r\n        return () => {\r\n            // Clean up WebRTC connection on unmount\r\n        };\r\n    }, []);\r\n\r\n    const handleEndCall = () => {\r\n        if (peerConnection) {\r\n            peerConnection.close();\r\n            setPeerConnection(null);\r\n        }\r\n        if (localStream) {\r\n            localStream.getTracks().forEach(track => track.stop());\r\n            setLocalStream(null);\r\n        }\r\n        if (remoteStream) {\r\n            setRemoteStream(null);\r\n        }\r\n        navigate('/chat'); // Navigate back to the chat page\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <button onClick={handleEndCall}>End Call</button>\r\n            <div>\r\n                <video\r\n                    ref={localVideoRef}\r\n                    autoPlay\r\n                    muted\r\n                    style={{ width: '300px', height: '200px' }}\r\n                />\r\n                <video\r\n                    ref={remoteVideoRef}\r\n                    autoPlay\r\n                    style={{ width: '600px', height: '400px' }}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Videocall;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}