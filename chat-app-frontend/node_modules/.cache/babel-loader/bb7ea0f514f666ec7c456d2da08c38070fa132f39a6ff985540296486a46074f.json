{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Sreyas\\\\OneDrive\\\\Desktop\\\\BellaCode\\\\chat-app-frontend\\\\src\\\\components\\\\Chatpage.js\",\n  _s = $RefreshSig$();\n// // // ///////////////////////////////////////////////////////////////////////////////\n// // // import React, { useState, useEffect, useRef } from 'react';\n// // // import { useParams } from 'react-router-dom';\n// // // import { io } from 'socket.io-client';\n// // // import defaultAvatar from '../assets/user (1).png';\n// // // import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\n// // // import { useNavigate } from 'react-router-dom';\n\n// // // const socket = io('http://localhost:3001');\n\n// // // const ChatPage = () => {\n// // //     const [messages, setMessages] = useState([]);\n// // //     const [messageText, setMessageText] = useState('');\n// // //     const messageEndRef = useRef(null);\n// // //     const navigate = useNavigate();\n// // //     const { receiverId } = useParams(); // Only use receiverId from URL\n\n// // //     useEffect(() => {\n// // //         console.log('Receiver ID:', receiverId);\n\n// // //         if (!receiverId) return;\n\n// // //         console.log('Connecting to socket for user:', receiverId);\n// // //         socket.emit('joinRoom', receiverId);\n\n// // //         socket.on('message', (message) => {\n// // //             console.log('Received message:', message);\n// // //             setMessages((prevMessages) => [...prevMessages, message]);\n// // //             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n// // //         });\n\n// // //         socket.on('messageDeleted', (messageId) => {\n// // //             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\n// // //         });\n\n// // //         return () => {\n// // //             socket.off('message');\n// // //             socket.off('messageDeleted');\n// // //             console.log('Socket connection cleaned up');\n// // //         };\n// // //     }, [receiverId]);\n\n// // //     const handleSendMessage = () => {\n// // //         if (messageText.trim()) {\n// // //             socket.emit('sendMessage', { sender: receiverId, receiver: receiverId, text: messageText });\n// // //             setMessageText('');\n// // //         }\n// // //     };\n\n// // //     const handleBack = () => {\n// // //         navigate('/home');\n// // //     };\n\n// // //     const handleCallUser = () => {\n// // //         // Logic for video/voice call\n// // //         console.log('Calling user:', receiverId);\n// // //     };\n\n// // //     const handleDeleteMessage = (messageId) => {\n// // //         socket.emit('deleteMessage', { messageId });\n// // //     };\n\n// // //     return (\n// // //         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\n// // //             <div className=\"flex items-center mb-4\">\n// // //                 <img\n// // //                     src={defaultAvatar}\n// // //                     alt=\"Avatar\"\n// // //                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\n// // //                 />\n// // //                 {receiverId ? (\n// // //                     <h1 className=\"text-2xl font-bold\">{receiverId}</h1>\n// // //                 ) : (\n// // //                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\n// // //                 )}\n// // //             </div>\n\n// // //             {/* Back button */}\n// // //             <button\n// // //                 onClick={handleBack}\n// // //                 type=\"button\"\n// // //                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\n// // //             >\n// // //                 <div\n// // //                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\n// // //                 >\n// // //                     <svg\n// // //                         width=\"25px\"\n// // //                         height=\"25px\"\n// // //                         viewBox=\"0 0 1024 1024\"\n// // //                         xmlns=\"http://www.w3.org/2000/svg\"\n// // //                     >\n// // //                         <path\n// // //                             fill=\"#000000\"\n// // //                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n// // //                         ></path>\n// // //                         <path\n// // //                             fill=\"#000000\"\n// // //                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n// // //                         ></path>\n// // //                     </svg>\n// // //                 </div>\n// // //                 <p className=\"translate-x-2\">Go Back</p>\n// // //             </button>\n\n// // //             {/* Back button end */}\n\n// // //             <div className=\"flex justify-end mb-4\">\n// // //                 <button\n// // //                     onClick={handleCallUser}\n// // //                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\n// // //                 >\n// // //                     <PhoneIcon className=\"w-6 h-6\" />\n// // //                 </button>\n// // //                 <button\n// // //                     onClick={handleCallUser}\n// // //                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\n// // //                 >\n// // //                     <VideoCameraIcon className=\"w-6 h-6\" />\n// // //                 </button>\n// // //             </div>\n\n// // //             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\n// // //                 <div className=\"flex-grow\">\n// // //                     {messages.map((message) => (\n// // //                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\n// // //                             <p className=\"font-semibold\">{message.sender_id}</p>\n// // //                             <p>{message.content}</p>\n// // //                             <button\n// // //                                 onClick={() => handleDeleteMessage(message.id)}\n// // //                                 className=\"text-red-500\"\n// // //                             >\n// // //                                 Delete\n// // //                             </button>\n// // //                         </div>\n// // //                     ))}\n// // //                     <div ref={messageEndRef} />\n// // //                 </div>\n// // //             </div>\n\n// // //             <div className=\"flex\">\n// // //                 <input\n// // //                     type=\"text\"\n// // //                     value={messageText}\n// // //                     onChange={(e) => setMessageText(e.target.value)}\n// // //                     placeholder=\"Type your message...\"\n// // //                     className=\"w-full px-3 py-2 border rounded\"\n// // //                 />\n// // //                 <button\n// // //                     onClick={handleSendMessage}\n// // //                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\n// // //                 >\n// // //                     Send\n// // //                     <svg\n// // //                         className=\"w-5 h-5\"\n// // //                         stroke=\"currentColor\"\n// // //                         strokeWidth=\"1.5\"\n// // //                         viewBox=\"0 0 24 24\"\n// // //                         fill=\"none\"\n// // //                         xmlns=\"http://www.w3.org/2000/svg\"\n// // //                     >\n// // //                         <path\n// // //                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\n// // //                             strokeLinejoin=\"round\"\n// // //                             strokeLinecap=\"round\"\n// // //                         ></path>\n// // //                     </svg>\n// // //                 </button>\n// // //             </div>\n// // //         </div>\n// // //     );\n// // // };\n\n// // // export default ChatPage;\n// // // ///////////////////////////////////////////////////////////////////\n// // import React, { useState, useEffect, useRef } from 'react';\n// // import { useParams } from 'react-router-dom';\n// // import { io } from 'socket.io-client';\n// // import defaultAvatar from '../assets/user (1).png';\n// // import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\n// // import { useNavigate } from 'react-router-dom';\n// // import { v4 as uuidv4 } from 'uuid';\n\n// // const socket = io('http://localhost:3001');\n\n// // const ChatPage = () => {\n// //     const [messages, setMessages] = useState([]);\n// //     const [messageText, setMessageText] = useState('');\n// //     const messageEndRef = useRef(null);\n// //     const navigate = useNavigate();\n// //     const { receiverId } = useParams(); // Only use receiverId from URL\n// //     const userId = '550e8400-e29b-41d4-a716-446655440000'; // Replace with a valid UUID for testing\n\n// //     useEffect(() => {\n// //         if (!receiverId) return;\n\n// //         // Join the room for the receiver\n// //         socket.emit('joinRoom', receiverId);\n\n// //         // Receive messages from the server\n// //         socket.on('message', (message) => {\n// //             setMessages((prevMessages) => [...prevMessages, message]);\n// //             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n// //         });\n\n// //         // Receive notifications for deleted messages\n// //         socket.on('messageDeleted', (messageId) => {\n// //             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\n// //         });\n\n// //         return () => {\n// //             socket.off('message');\n// //             socket.off('messageDeleted');\n// //         };\n// //     }, [receiverId]);\n\n// //     const handleSendMessage = async () => {\n// //         if (messageText.trim()) {\n// //             const messageId = uuidv4(); // Generate a new UUID\n// //             try {\n// //                 const response = await fetch('http://localhost:3001/sendMessage', {\n// //                     method: 'POST',\n// //                     headers: {\n// //                         'Content-Type': 'application/json',\n// //                     },\n// //                     body: JSON.stringify({\n// //                         sender: userId,\n// //                         receiver: receiverId,\n// //                         text: messageText,\n// //                         messageId: messageId\n// //                     }),\n// //                 });\n\n// //                 const result = await response.json();\n// //                 console.log('SendMessage Response:', result);\n\n// //                 if (response.ok) {\n// //                     setMessageText('');\n// //                 } else {\n// //                     console.error('SendMessage Error:', result.message);\n// //                 }\n// //             } catch (error) {\n// //                 console.error('SendMessage Fetch Error:', error);\n// //             }\n// //         }\n// //     };\n\n// //     const handleDeleteMessage = async (messageId) => {\n// //         try {\n// //             await fetch('http://localhost:3001/deleteMessage', {\n// //                 method: 'POST',\n// //                 headers: {\n// //                     'Content-Type': 'application/json',\n// //                 },\n// //                 body: JSON.stringify({ messageId }),\n// //             });\n// //         } catch (error) {\n// //             console.error('DeleteMessage Error:', error);\n// //         }\n// //     };\n\n// //     const handleBack = () => {\n// //         navigate('/home');\n// //     };\n\n// //     const handleCallUser = () => {\n// //         console.log('Calling user:', receiverId);\n// //     };\n\n// //     return (\n// //         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\n// //             <div className=\"flex items-center mb-4\">\n// //                 <img\n// //                     src={defaultAvatar}\n// //                     alt=\"Avatar\"\n// //                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\n// //                 />\n// //                 {receiverId ? (\n// //                     <h1 className=\"text-2xl font-bold\">{receiverId}</h1>\n// //                 ) : (\n// //                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\n// //                 )}\n// //             </div>\n\n// //             {/* Back button */}\n// //             <button\n// //                 onClick={handleBack}\n// //                 type=\"button\"\n// //                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\n// //             >\n// //                 <div\n// //                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\n// //                 >\n// //                     <svg\n// //                         width=\"25px\"\n// //                         height=\"25px\"\n// //                         viewBox=\"0 0 1024 1024\"\n// //                         xmlns=\"http://www.w3.org/2000/svg\"\n// //                     >\n// //                         <path\n// //                             fill=\"#000000\"\n// //                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n// //                         ></path>\n// //                         <path\n// //                             fill=\"#000000\"\n// //                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n// //                         ></path>\n// //                     </svg>\n// //                 </div>\n// //                 <p className=\"translate-x-2\">Go Back</p>\n// //             </button>\n\n// //             {/* Back button end */}\n\n// //             <div className=\"flex justify-end mb-4\">\n// //                 <button\n// //                     onClick={handleCallUser}\n// //                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\n// //                 >\n// //                     <PhoneIcon className=\"w-6 h-6\" />\n// //                 </button>\n// //                 <button\n// //                     onClick={handleCallUser}\n// //                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\n// //                 >\n// //                     <VideoCameraIcon className=\"w-6 h-6\" />\n// //                 </button>\n// //             </div>\n\n// //             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\n// //                 <div className=\"flex-grow\">\n// //                     {messages.map((message) => (\n// //                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\n// //                             <p className=\"font-semibold\">{message.sender_id}</p>\n// //                             <p>{message.content}</p>\n// //                             <button\n// //                                 onClick={() => handleDeleteMessage(message.id)}\n// //                                 className=\"text-red-500\"\n// //                             >\n// //                                 Delete\n// //                             </button>\n// //                         </div>\n// //                     ))}\n// //                     <div ref={messageEndRef} />\n// //                 </div>\n// //             </div>\n\n// //             <div className=\"flex\">\n// //                 <input\n// //                     type=\"text\"\n// //                     value={messageText}\n// //                     onChange={(e) => setMessageText(e.target.value)}\n// //                     placeholder=\"Type your message...\"\n// //                     className=\"w-full px-3 py-2 border rounded\"\n// //                 />\n// //                 <button\n// //                     onClick={handleSendMessage}\n// //                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\n// //                 >\n// //                     Send\n// //                     <svg\n// //                         className=\"w-5 h-5\"\n// //                         stroke=\"currentColor\"\n// //                         strokeWidth=\"1.5\"\n// //                         viewBox=\"0 0 24 24\"\n// //                         fill=\"none\"\n// //                         xmlns=\"http://www.w3.org/2000/svg\"\n// //                     >\n// //                         <path\n// //                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\n// //                             strokeLinejoin=\"round\"\n// //                             strokeLinecap=\"round\"\n// //                         ></path>\n// //                     </svg>\n// //                 </button>\n// //             </div>\n// //         </div>\n// //     );\n// // };\n\n// // export default ChatPage;\n\n// import React, { useState, useEffect, useRef } from 'react';\n// import { useParams, useNavigate } from 'react-router-dom';\n// import { io } from 'socket.io-client';\n// import defaultAvatar from '../assets/user (1).png';\n// import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\n\n// const socket = io('http://localhost:3001');\n\n// const ChatPage = () => {\n//     const [messages, setMessages] = useState([]);\n//     const [messageText, setMessageText] = useState('');\n//     const [userEmail, setUserEmail] = useState('');  // Define state for user email\n//     const [receiverEmail, setReceiverEmail] = useState(''); // Define state for receiver email\n//     const [error, setError] = useState(''); // Define state for errors\n//     const messageEndRef = useRef(null);\n//     const navigate = useNavigate();\n//     const { receiverId } = useParams(); // Get receiverId from URL\n\n//     useEffect(() => {\n//         if (!receiverId) return;\n\n//         // Fetch user email from your auth system\n//         const fetchUserEmail = async () => {\n//             try {\n//                 const response = await fetch('/api/getUserEmail');\n//                 const data = await response.json();\n//                 setUserEmail(data.email);\n//             } catch (error) {\n//                 console.error('Failed to fetch user email:', error);\n//                 setError('Failed to fetch user email.');\n//             }\n//         };\n\n//         fetchUserEmail();\n\n//         // Join the room for the receiver\n//         socket.emit('joinRoom', receiverId);\n\n//         // Receive messages from the server\n//         socket.on('message', (message) => {\n//             setMessages((prevMessages) => [...prevMessages, message]);\n//             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\n//         });\n\n//         // Receive notifications for deleted messages\n//         socket.on('messageDeleted', (messageId) => {\n//             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\n//         });\n\n//         return () => {\n//             socket.off('message');\n//             socket.off('messageDeleted');\n//         };\n//     }, [receiverId]);\n\n//     const handleSendMessage = async () => {\n//         // console.log(username);\n//         console.log(receiverEmail);\n//         if (messageText.trim()) {\n//             try {\n//                 const response = await fetch('http://localhost:3001/sendMessage', {\n//                     method: 'POST',\n//                     headers: {\n//                         'Content-Type': 'application/json',\n//                     },\n//                     body: JSON.stringify({\n//                         senderEmail: userEmail, // Use state variable\n//                         receiverEmail: receiverEmail,\n//                         text: messageText,\n//                     }),\n//                 });\n//                 const result = await response.json();\n//                 if (response.ok) {\n//                     setMessageText('');\n//                 } else {\n//                     console.error('SendMessage Error:', result.message);\n//                 }\n//             } catch (error) {\n//                 console.error('SendMessage Fetch Error:', error);\n//             }\n//         }\n//     };\n\n//     const handleDeleteMessage = async (messageId) => {\n//         try {\n//             await fetch('http://localhost:3001/deleteMessage', {\n//                 method: 'POST',\n//                 headers: {\n//                     'Content-Type': 'application/json',\n//                 },\n//                 body: JSON.stringify({ messageId }),\n//             });\n//         } catch (error) {\n//             console.error('DeleteMessage Error:', error);\n//         }\n//     };\n\n//     const handleBack = () => {\n//         navigate('/home');\n//     };\n\n//     const handleCallUser = () => {\n//         // Logic for video/voice call\n//         console.log('Calling user:', receiverId);\n//     };\n\n//     // Fetch receiver email and handle errors if necessary\n//     useEffect(() => {\n//         const fetchReceiverEmail = async () => {\n//             try {\n//                 const response = await fetch(`http://localhost:3001/getUserEmailById/${receiverId}`);\n//                 const result = await response.json();\n//                 setReceiverEmail(result.userEmail);\n//             } catch (error) {\n//                 console.error('Failed to fetch receiver email:', error);\n//                 setError('Failed to fetch receiver email.');\n//             }\n//         };\n\n//         if (receiverId) {\n//             fetchReceiverEmail();\n//         }\n//     }, [receiverId]);\n\n//     return (\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\n//             <div className=\"flex items-center mb-4\">\n//                 <img\n//                     src={defaultAvatar}\n//                     alt=\"Avatar\"\n//                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\n//                 />\n//                 {receiverEmail ? (\n//                     <h1 className=\"text-2xl font-bold\">{receiverEmail}</h1>\n//                 ) : (\n//                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\n//                 )}\n//             </div>\n\n//             {/* Back button */}\n//             <button\n//                 onClick={handleBack}\n//                 type=\"button\"\n//                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\n//             >\n//                 <div\n//                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\n//                 >\n//                     <svg\n//                         width=\"25px\"\n//                         height=\"25px\"\n//                         viewBox=\"0 0 1024 1024\"\n//                         xmlns=\"http://www.w3.org/2000/svg\"\n//                     >\n//                         <path\n//                             fill=\"#000000\"\n//                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n//                         ></path>\n//                         <path\n//                             fill=\"#000000\"\n//                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n//                         ></path>\n//                     </svg>\n//                 </div>\n//                 <p className=\"translate-x-2\">Go Back</p>\n//             </button>\n\n//             {/* Back button end */}\n\n//             <div className=\"flex justify-end mb-4\">\n//                 <button\n//                     onClick={handleCallUser}\n//                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\n//                 >\n//                     <PhoneIcon className=\"w-6 h-6\" />\n//                 </button>\n//                 <button\n//                     onClick={handleCallUser}\n//                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\n//                 >\n//                     <VideoCameraIcon className=\"w-6 h-6\" />\n//                 </button>\n//             </div>\n\n//             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\n//                 <div className=\"flex-grow\">\n//                     {messages.map((message) => (\n//                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\n//                             <p className=\"font-semibold\">{message.senderEmail}</p>\n//                             <p>{message.text}</p>\n//                             <button\n//                                 onClick={() => handleDeleteMessage(message.id)}\n//                                 className=\"text-red-500\"\n//                             >\n//                                 Delete\n//                             </button>\n//                         </div>\n//                     ))}\n//                     <div ref={messageEndRef} />\n//                 </div>\n//             </div>\n\n//             <div className=\"flex\">\n//                 <input\n//                     type=\"text\"\n//                     value={messageText}\n//                     onChange={(e) => setMessageText(e.target.value)}\n//                     placeholder=\"Type your message...\"\n//                     className=\"w-full px-3 py-2 border rounded\"\n//                 />\n//                 <button\n//                     onClick={handleSendMessage}\n//                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\n//                 >\n//                     Send\n//                     <svg\n//                         className=\"w-5 h-5\"\n//                         stroke=\"currentColor\"\n//                         strokeWidth=\"1.5\"\n//                         viewBox=\"0 0 24 24\"\n//                         fill=\"none\"\n//                         xmlns=\"http://www.w3.org/2000/svg\"\n//                     >\n//                         <path\n//                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\n//                             strokeLinejoin=\"round\"\n//                             strokeLinecap=\"round\"\n//                         ></path>\n//                     </svg>\n//                 </button>\n//             </div>\n//         </div>\n//     );\n// };\n\n// export default ChatPage;\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { io } from 'socket.io-client'; // Ensure you have this import if you're using socket.io\nimport defaultAvatar from '../assets/user (1).png'; // Replace with the actual path to the defaultAvatar image\n// import { PhoneIcon, VideoCameraIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline'; // Adjust import if using a different icon library\nconst socket = io('http://localhost:3001'); // Replace with your server URL\nimport { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatPage = () => {\n  _s();\n  const [messages, setMessages] = useState([]);\n  const [messageText, setMessageText] = useState('');\n  const [receiverEmail, setReceiverEmail] = useState('');\n  const [error, setError] = useState('');\n  const messageEndRef = useRef(null);\n  const navigate = useNavigate();\n  const {\n    receiverId\n  } = useParams();\n  const username = localStorage.getItem('username');\n  const userId = localStorage.getItem('userId');\n  const userEmail = localStorage.getItem('userEmail');\n  useEffect(() => {\n    if (!receiverId) return;\n    const fetchReceiverEmail = async () => {\n      try {\n        const response = await fetch(`http://localhost:3001/getUserEmailById/${receiverId}`);\n        const result = await response.json();\n        if (result.userEmail) {\n          setReceiverEmail(result.userEmail);\n        } else {\n          throw new Error('No email found for receiver');\n        }\n      } catch (error) {\n        console.error('Failed to fetch receiver email:', error);\n        setError('Failed to fetch receiver email.');\n      }\n    };\n    fetchReceiverEmail();\n    socket.emit('joinRoom', receiverId);\n\n    // Receive messages from the server\n    socket.on('message', message => {\n      var _messageEndRef$curren;\n      setMessages(prevMessages => [...prevMessages, message]);\n      (_messageEndRef$curren = messageEndRef.current) === null || _messageEndRef$curren === void 0 ? void 0 : _messageEndRef$curren.scrollIntoView({\n        behavior: 'smooth'\n      });\n    });\n\n    // Receive notifications for deleted messages\n    socket.on('messageDeleted', messageId => {\n      setMessages(prevMessages => prevMessages.filter(msg => msg.id !== messageId));\n    });\n    return () => {\n      socket.off('message');\n      socket.off('messageDeleted');\n    };\n  }, [receiverId]);\n  const handleSendMessage = async () => {\n    console.log('Sender Email:', userEmail);\n    console.log('Receiver Email:', receiverEmail);\n    if (messageText.trim()) {\n      try {\n        const response = await fetch('http://localhost:3001/sendMessage', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            senderEmail: userEmail,\n            receiverEmail: receiverEmail,\n            text: messageText\n          })\n        });\n        const result = await response.json();\n        if (response.ok) {\n          setMessageText('');\n        } else {\n          console.error('SendMessage Error:', result.message);\n        }\n      } catch (error) {\n        console.error('SendMessage Fetch Error:', error);\n      }\n    }\n  };\n  const handleDeleteMessage = async messageId => {\n    try {\n      await fetch('http://localhost:3001/deleteMessage', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          messageId\n        })\n      });\n    } catch (error) {\n      console.error('DeleteMessage Error:', error);\n    }\n  };\n  const handleBack = () => {\n    navigate('/home');\n  };\n  const handleCallUser = () => {\n    console.log('Calling user:', receiverId);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex items-center mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: defaultAvatar,\n        alt: \"Avatar\",\n        className: \"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 739,\n        columnNumber: 17\n      }, this), receiverEmail ? /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: receiverEmail\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 745,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-bold\",\n        children: \"Loading...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 747,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 738,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBack,\n      type: \"button\",\n      className: \"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\",\n        children: /*#__PURE__*/_jsxDEV(\"svg\", {\n          width: \"25px\",\n          height: \"25px\",\n          viewBox: \"0 0 1024 1024\",\n          xmlns: \"http://www.w3.org/2000/svg\",\n          children: [/*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"#000000\",\n            d: \"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 765,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"path\", {\n            fill: \"#000000\",\n            d: \"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 769,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 759,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 756,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"translate-x-2\",\n        children: \"Go Back\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 751,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-end mb-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCallUser,\n        className: \"bg-green-500 text-white py-2 px-4 rounded mr-2\",\n        children: /*#__PURE__*/_jsxDEV(PhoneIcon, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 783,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 779,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleCallUser,\n        className: \"bg-blue-500 text-white py-2 px-4 rounded\",\n        children: /*#__PURE__*/_jsxDEV(VideoCameraIcon, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 789,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 785,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 778,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col flex-grow overflow-y-auto mb-4\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex-grow\",\n        children: [messages.map(message => /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bg-white p-4 mb-2 rounded shadow\",\n          children: [/*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"font-semibold\",\n            children: message.senderEmail\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 797,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: message.text\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 798,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => handleDeleteMessage(message.id),\n            className: \"text-red-500\",\n            children: \"Delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 799,\n            columnNumber: 29\n          }, this)]\n        }, message.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 796,\n          columnNumber: 25\n        }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n          ref: messageEndRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 807,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 794,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 793,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: messageText,\n        onChange: e => setMessageText(e.target.value),\n        placeholder: \"Type your message...\",\n        className: \"w-full px-3 py-2 border rounded\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 812,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSendMessage,\n        className: \"flex items-center justify-center px-4 py-2 bg-blue-500 text-white rounded ml-2\",\n        children: /*#__PURE__*/_jsxDEV(PaperAirplaneIcon, {\n          className: \"w-6 h-6\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 819,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 811,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 737,\n    columnNumber: 9\n  }, this);\n};\n_s(ChatPage, \"svECyoiB9mRaES8CQnss6m0apEE=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = ChatPage;\nexport default ChatPage;\nvar _c;\n$RefreshReg$(_c, \"ChatPage\");","map":{"version":3,"names":["React","useState","useEffect","useRef","useNavigate","useParams","io","defaultAvatar","socket","PhoneIcon","VideoCameraIcon","jsxDEV","_jsxDEV","ChatPage","_s","messages","setMessages","messageText","setMessageText","receiverEmail","setReceiverEmail","error","setError","messageEndRef","navigate","receiverId","username","localStorage","getItem","userId","userEmail","fetchReceiverEmail","response","fetch","result","json","Error","console","emit","on","message","_messageEndRef$curren","prevMessages","current","scrollIntoView","behavior","messageId","filter","msg","id","off","handleSendMessage","log","trim","method","headers","body","JSON","stringify","senderEmail","text","ok","handleDeleteMessage","handleBack","handleCallUser","className","children","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","width","height","viewBox","xmlns","fill","d","map","ref","value","onChange","e","target","placeholder","PaperAirplaneIcon","_c","$RefreshReg$"],"sources":["C:/Users/Sreyas/OneDrive/Desktop/BellaCode/chat-app-frontend/src/components/Chatpage.js"],"sourcesContent":["\r\n// // // ///////////////////////////////////////////////////////////////////////////////\r\n// // // import React, { useState, useEffect, useRef } from 'react';\r\n// // // import { useParams } from 'react-router-dom';\r\n// // // import { io } from 'socket.io-client';\r\n// // // import defaultAvatar from '../assets/user (1).png';\r\n// // // import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\r\n// // // import { useNavigate } from 'react-router-dom';\r\n\r\n// // // const socket = io('http://localhost:3001');\r\n\r\n// // // const ChatPage = () => {\r\n// // //     const [messages, setMessages] = useState([]);\r\n// // //     const [messageText, setMessageText] = useState('');\r\n// // //     const messageEndRef = useRef(null);\r\n// // //     const navigate = useNavigate();\r\n// // //     const { receiverId } = useParams(); // Only use receiverId from URL\r\n\r\n// // //     useEffect(() => {\r\n// // //         console.log('Receiver ID:', receiverId);\r\n\r\n// // //         if (!receiverId) return;\r\n\r\n// // //         console.log('Connecting to socket for user:', receiverId);\r\n// // //         socket.emit('joinRoom', receiverId);\r\n\r\n// // //         socket.on('message', (message) => {\r\n// // //             console.log('Received message:', message);\r\n// // //             setMessages((prevMessages) => [...prevMessages, message]);\r\n// // //             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n// // //         });\r\n\r\n// // //         socket.on('messageDeleted', (messageId) => {\r\n// // //             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\r\n// // //         });\r\n\r\n// // //         return () => {\r\n// // //             socket.off('message');\r\n// // //             socket.off('messageDeleted');\r\n// // //             console.log('Socket connection cleaned up');\r\n// // //         };\r\n// // //     }, [receiverId]);\r\n\r\n// // //     const handleSendMessage = () => {\r\n// // //         if (messageText.trim()) {\r\n// // //             socket.emit('sendMessage', { sender: receiverId, receiver: receiverId, text: messageText });\r\n// // //             setMessageText('');\r\n// // //         }\r\n// // //     };\r\n\r\n// // //     const handleBack = () => {\r\n// // //         navigate('/home');\r\n// // //     };\r\n\r\n// // //     const handleCallUser = () => {\r\n// // //         // Logic for video/voice call\r\n// // //         console.log('Calling user:', receiverId);\r\n// // //     };\r\n\r\n// // //     const handleDeleteMessage = (messageId) => {\r\n// // //         socket.emit('deleteMessage', { messageId });\r\n// // //     };\r\n\r\n// // //     return (\r\n// // //         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\r\n// // //             <div className=\"flex items-center mb-4\">\r\n// // //                 <img\r\n// // //                     src={defaultAvatar}\r\n// // //                     alt=\"Avatar\"\r\n// // //                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\r\n// // //                 />\r\n// // //                 {receiverId ? (\r\n// // //                     <h1 className=\"text-2xl font-bold\">{receiverId}</h1>\r\n// // //                 ) : (\r\n// // //                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\r\n// // //                 )}\r\n// // //             </div>\r\n\r\n// // //             {/* Back button */}\r\n// // //             <button\r\n// // //                 onClick={handleBack}\r\n// // //                 type=\"button\"\r\n// // //                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\r\n// // //             >\r\n// // //                 <div\r\n// // //                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n// // //                 >\r\n// // //                     <svg\r\n// // //                         width=\"25px\"\r\n// // //                         height=\"25px\"\r\n// // //                         viewBox=\"0 0 1024 1024\"\r\n// // //                         xmlns=\"http://www.w3.org/2000/svg\"\r\n// // //                     >\r\n// // //                         <path\r\n// // //                             fill=\"#000000\"\r\n// // //                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n// // //                         ></path>\r\n// // //                         <path\r\n// // //                             fill=\"#000000\"\r\n// // //                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n// // //                         ></path>\r\n// // //                     </svg>\r\n// // //                 </div>\r\n// // //                 <p className=\"translate-x-2\">Go Back</p>\r\n// // //             </button>\r\n\r\n// // //             {/* Back button end */}\r\n\r\n// // //             <div className=\"flex justify-end mb-4\">\r\n// // //                 <button\r\n// // //                     onClick={handleCallUser}\r\n// // //                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\r\n// // //                 >\r\n// // //                     <PhoneIcon className=\"w-6 h-6\" />\r\n// // //                 </button>\r\n// // //                 <button\r\n// // //                     onClick={handleCallUser}\r\n// // //                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n// // //                 >\r\n// // //                     <VideoCameraIcon className=\"w-6 h-6\" />\r\n// // //                 </button>\r\n// // //             </div>\r\n\r\n// // //             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\r\n// // //                 <div className=\"flex-grow\">\r\n// // //                     {messages.map((message) => (\r\n// // //                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\r\n// // //                             <p className=\"font-semibold\">{message.sender_id}</p>\r\n// // //                             <p>{message.content}</p>\r\n// // //                             <button\r\n// // //                                 onClick={() => handleDeleteMessage(message.id)}\r\n// // //                                 className=\"text-red-500\"\r\n// // //                             >\r\n// // //                                 Delete\r\n// // //                             </button>\r\n// // //                         </div>\r\n// // //                     ))}\r\n// // //                     <div ref={messageEndRef} />\r\n// // //                 </div>\r\n// // //             </div>\r\n\r\n// // //             <div className=\"flex\">\r\n// // //                 <input\r\n// // //                     type=\"text\"\r\n// // //                     value={messageText}\r\n// // //                     onChange={(e) => setMessageText(e.target.value)}\r\n// // //                     placeholder=\"Type your message...\"\r\n// // //                     className=\"w-full px-3 py-2 border rounded\"\r\n// // //                 />\r\n// // //                 <button\r\n// // //                     onClick={handleSendMessage}\r\n// // //                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\r\n// // //                 >\r\n// // //                     Send\r\n// // //                     <svg\r\n// // //                         className=\"w-5 h-5\"\r\n// // //                         stroke=\"currentColor\"\r\n// // //                         strokeWidth=\"1.5\"\r\n// // //                         viewBox=\"0 0 24 24\"\r\n// // //                         fill=\"none\"\r\n// // //                         xmlns=\"http://www.w3.org/2000/svg\"\r\n// // //                     >\r\n// // //                         <path\r\n// // //                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\r\n// // //                             strokeLinejoin=\"round\"\r\n// // //                             strokeLinecap=\"round\"\r\n// // //                         ></path>\r\n// // //                     </svg>\r\n// // //                 </button>\r\n// // //             </div>\r\n// // //         </div>\r\n// // //     );\r\n// // // };\r\n\r\n// // // export default ChatPage;\r\n// // // ///////////////////////////////////////////////////////////////////\r\n// // import React, { useState, useEffect, useRef } from 'react';\r\n// // import { useParams } from 'react-router-dom';\r\n// // import { io } from 'socket.io-client';\r\n// // import defaultAvatar from '../assets/user (1).png';\r\n// // import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\r\n// // import { useNavigate } from 'react-router-dom';\r\n// // import { v4 as uuidv4 } from 'uuid';\r\n\r\n// // const socket = io('http://localhost:3001');\r\n\r\n// // const ChatPage = () => {\r\n// //     const [messages, setMessages] = useState([]);\r\n// //     const [messageText, setMessageText] = useState('');\r\n// //     const messageEndRef = useRef(null);\r\n// //     const navigate = useNavigate();\r\n// //     const { receiverId } = useParams(); // Only use receiverId from URL\r\n// //     const userId = '550e8400-e29b-41d4-a716-446655440000'; // Replace with a valid UUID for testing\r\n\r\n// //     useEffect(() => {\r\n// //         if (!receiverId) return;\r\n\r\n// //         // Join the room for the receiver\r\n// //         socket.emit('joinRoom', receiverId);\r\n\r\n// //         // Receive messages from the server\r\n// //         socket.on('message', (message) => {\r\n// //             setMessages((prevMessages) => [...prevMessages, message]);\r\n// //             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n// //         });\r\n\r\n// //         // Receive notifications for deleted messages\r\n// //         socket.on('messageDeleted', (messageId) => {\r\n// //             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\r\n// //         });\r\n\r\n// //         return () => {\r\n// //             socket.off('message');\r\n// //             socket.off('messageDeleted');\r\n// //         };\r\n// //     }, [receiverId]);\r\n\r\n// //     const handleSendMessage = async () => {\r\n// //         if (messageText.trim()) {\r\n// //             const messageId = uuidv4(); // Generate a new UUID\r\n// //             try {\r\n// //                 const response = await fetch('http://localhost:3001/sendMessage', {\r\n// //                     method: 'POST',\r\n// //                     headers: {\r\n// //                         'Content-Type': 'application/json',\r\n// //                     },\r\n// //                     body: JSON.stringify({\r\n// //                         sender: userId,\r\n// //                         receiver: receiverId,\r\n// //                         text: messageText,\r\n// //                         messageId: messageId\r\n// //                     }),\r\n// //                 });\r\n\r\n// //                 const result = await response.json();\r\n// //                 console.log('SendMessage Response:', result);\r\n\r\n// //                 if (response.ok) {\r\n// //                     setMessageText('');\r\n// //                 } else {\r\n// //                     console.error('SendMessage Error:', result.message);\r\n// //                 }\r\n// //             } catch (error) {\r\n// //                 console.error('SendMessage Fetch Error:', error);\r\n// //             }\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleDeleteMessage = async (messageId) => {\r\n// //         try {\r\n// //             await fetch('http://localhost:3001/deleteMessage', {\r\n// //                 method: 'POST',\r\n// //                 headers: {\r\n// //                     'Content-Type': 'application/json',\r\n// //                 },\r\n// //                 body: JSON.stringify({ messageId }),\r\n// //             });\r\n// //         } catch (error) {\r\n// //             console.error('DeleteMessage Error:', error);\r\n// //         }\r\n// //     };\r\n\r\n// //     const handleBack = () => {\r\n// //         navigate('/home');\r\n// //     };\r\n\r\n// //     const handleCallUser = () => {\r\n// //         console.log('Calling user:', receiverId);\r\n// //     };\r\n\r\n    \r\n// //     return (\r\n// //         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\r\n// //             <div className=\"flex items-center mb-4\">\r\n// //                 <img\r\n// //                     src={defaultAvatar}\r\n// //                     alt=\"Avatar\"\r\n// //                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\r\n// //                 />\r\n// //                 {receiverId ? (\r\n// //                     <h1 className=\"text-2xl font-bold\">{receiverId}</h1>\r\n// //                 ) : (\r\n// //                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\r\n// //                 )}\r\n// //             </div>\r\n\r\n// //             {/* Back button */}\r\n// //             <button\r\n// //                 onClick={handleBack}\r\n// //                 type=\"button\"\r\n// //                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\r\n// //             >\r\n// //                 <div\r\n// //                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n// //                 >\r\n// //                     <svg\r\n// //                         width=\"25px\"\r\n// //                         height=\"25px\"\r\n// //                         viewBox=\"0 0 1024 1024\"\r\n// //                         xmlns=\"http://www.w3.org/2000/svg\"\r\n// //                     >\r\n// //                         <path\r\n// //                             fill=\"#000000\"\r\n// //                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n// //                         ></path>\r\n// //                         <path\r\n// //                             fill=\"#000000\"\r\n// //                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n// //                         ></path>\r\n// //                     </svg>\r\n// //                 </div>\r\n// //                 <p className=\"translate-x-2\">Go Back</p>\r\n// //             </button>\r\n\r\n// //             {/* Back button end */}\r\n\r\n// //             <div className=\"flex justify-end mb-4\">\r\n// //                 <button\r\n// //                     onClick={handleCallUser}\r\n// //                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\r\n// //                 >\r\n// //                     <PhoneIcon className=\"w-6 h-6\" />\r\n// //                 </button>\r\n// //                 <button\r\n// //                     onClick={handleCallUser}\r\n// //                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n// //                 >\r\n// //                     <VideoCameraIcon className=\"w-6 h-6\" />\r\n// //                 </button>\r\n// //             </div>\r\n\r\n// //             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\r\n// //                 <div className=\"flex-grow\">\r\n// //                     {messages.map((message) => (\r\n// //                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\r\n// //                             <p className=\"font-semibold\">{message.sender_id}</p>\r\n// //                             <p>{message.content}</p>\r\n// //                             <button\r\n// //                                 onClick={() => handleDeleteMessage(message.id)}\r\n// //                                 className=\"text-red-500\"\r\n// //                             >\r\n// //                                 Delete\r\n// //                             </button>\r\n// //                         </div>\r\n// //                     ))}\r\n// //                     <div ref={messageEndRef} />\r\n// //                 </div>\r\n// //             </div>\r\n\r\n// //             <div className=\"flex\">\r\n// //                 <input\r\n// //                     type=\"text\"\r\n// //                     value={messageText}\r\n// //                     onChange={(e) => setMessageText(e.target.value)}\r\n// //                     placeholder=\"Type your message...\"\r\n// //                     className=\"w-full px-3 py-2 border rounded\"\r\n// //                 />\r\n// //                 <button\r\n// //                     onClick={handleSendMessage}\r\n// //                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\r\n// //                 >\r\n// //                     Send\r\n// //                     <svg\r\n// //                         className=\"w-5 h-5\"\r\n// //                         stroke=\"currentColor\"\r\n// //                         strokeWidth=\"1.5\"\r\n// //                         viewBox=\"0 0 24 24\"\r\n// //                         fill=\"none\"\r\n// //                         xmlns=\"http://www.w3.org/2000/svg\"\r\n// //                     >\r\n// //                         <path\r\n// //                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\r\n// //                             strokeLinejoin=\"round\"\r\n// //                             strokeLinecap=\"round\"\r\n// //                         ></path>\r\n// //                     </svg>\r\n// //                 </button>\r\n// //             </div>\r\n// //         </div>\r\n// //     );\r\n// // };\r\n\r\n// // export default ChatPage;\r\n\r\n\r\n\r\n// import React, { useState, useEffect, useRef } from 'react';\r\n// import { useParams, useNavigate } from 'react-router-dom';\r\n// import { io } from 'socket.io-client';\r\n// import defaultAvatar from '../assets/user (1).png';\r\n// import { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\r\n\r\n// const socket = io('http://localhost:3001');\r\n\r\n// const ChatPage = () => {\r\n//     const [messages, setMessages] = useState([]);\r\n//     const [messageText, setMessageText] = useState('');\r\n//     const [userEmail, setUserEmail] = useState('');  // Define state for user email\r\n//     const [receiverEmail, setReceiverEmail] = useState(''); // Define state for receiver email\r\n//     const [error, setError] = useState(''); // Define state for errors\r\n//     const messageEndRef = useRef(null);\r\n//     const navigate = useNavigate();\r\n//     const { receiverId } = useParams(); // Get receiverId from URL\r\n\r\n//     useEffect(() => {\r\n//         if (!receiverId) return;\r\n\r\n//         // Fetch user email from your auth system\r\n//         const fetchUserEmail = async () => {\r\n//             try {\r\n//                 const response = await fetch('/api/getUserEmail');\r\n//                 const data = await response.json();\r\n//                 setUserEmail(data.email);\r\n//             } catch (error) {\r\n//                 console.error('Failed to fetch user email:', error);\r\n//                 setError('Failed to fetch user email.');\r\n//             }\r\n//         };\r\n\r\n//         fetchUserEmail();\r\n\r\n//         // Join the room for the receiver\r\n//         socket.emit('joinRoom', receiverId);\r\n\r\n//         // Receive messages from the server\r\n//         socket.on('message', (message) => {\r\n//             setMessages((prevMessages) => [...prevMessages, message]);\r\n//             messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n//         });\r\n\r\n//         // Receive notifications for deleted messages\r\n//         socket.on('messageDeleted', (messageId) => {\r\n//             setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\r\n//         });\r\n\r\n//         return () => {\r\n//             socket.off('message');\r\n//             socket.off('messageDeleted');\r\n//         };\r\n//     }, [receiverId]);\r\n\r\n//     const handleSendMessage = async () => {\r\n//         // console.log(username);\r\n//         console.log(receiverEmail);\r\n//         if (messageText.trim()) {\r\n//             try {\r\n//                 const response = await fetch('http://localhost:3001/sendMessage', {\r\n//                     method: 'POST',\r\n//                     headers: {\r\n//                         'Content-Type': 'application/json',\r\n//                     },\r\n//                     body: JSON.stringify({\r\n//                         senderEmail: userEmail, // Use state variable\r\n//                         receiverEmail: receiverEmail,\r\n//                         text: messageText,\r\n//                     }),\r\n//                 });\r\n//                 const result = await response.json();\r\n//                 if (response.ok) {\r\n//                     setMessageText('');\r\n//                 } else {\r\n//                     console.error('SendMessage Error:', result.message);\r\n//                 }\r\n//             } catch (error) {\r\n//                 console.error('SendMessage Fetch Error:', error);\r\n//             }\r\n//         }\r\n//     };\r\n\r\n//     const handleDeleteMessage = async (messageId) => {\r\n//         try {\r\n//             await fetch('http://localhost:3001/deleteMessage', {\r\n//                 method: 'POST',\r\n//                 headers: {\r\n//                     'Content-Type': 'application/json',\r\n//                 },\r\n//                 body: JSON.stringify({ messageId }),\r\n//             });\r\n//         } catch (error) {\r\n//             console.error('DeleteMessage Error:', error);\r\n//         }\r\n//     };\r\n\r\n//     const handleBack = () => {\r\n//         navigate('/home');\r\n//     };\r\n\r\n//     const handleCallUser = () => {\r\n//         // Logic for video/voice call\r\n//         console.log('Calling user:', receiverId);\r\n//     };\r\n\r\n//     // Fetch receiver email and handle errors if necessary\r\n//     useEffect(() => {\r\n//         const fetchReceiverEmail = async () => {\r\n//             try {\r\n//                 const response = await fetch(`http://localhost:3001/getUserEmailById/${receiverId}`);\r\n//                 const result = await response.json();\r\n//                 setReceiverEmail(result.userEmail);\r\n//             } catch (error) {\r\n//                 console.error('Failed to fetch receiver email:', error);\r\n//                 setError('Failed to fetch receiver email.');\r\n//             }\r\n//         };\r\n\r\n//         if (receiverId) {\r\n//             fetchReceiverEmail();\r\n//         }\r\n//     }, [receiverId]);\r\n\r\n//     return (\r\n//         <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\r\n//             <div className=\"flex items-center mb-4\">\r\n//                 <img\r\n//                     src={defaultAvatar}\r\n//                     alt=\"Avatar\"\r\n//                     className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\r\n//                 />\r\n//                 {receiverEmail ? (\r\n//                     <h1 className=\"text-2xl font-bold\">{receiverEmail}</h1>\r\n//                 ) : (\r\n//                     <h1 className=\"text-2xl font-bold\">Loading...</h1>\r\n//                 )}\r\n//             </div>\r\n\r\n//             {/* Back button */}\r\n//             <button\r\n//                 onClick={handleBack}\r\n//                 type=\"button\"\r\n//                 className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\r\n//             >\r\n//                 <div\r\n//                     className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n//                 >\r\n//                     <svg\r\n//                         width=\"25px\"\r\n//                         height=\"25px\"\r\n//                         viewBox=\"0 0 1024 1024\"\r\n//                         xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     >\r\n//                         <path\r\n//                             fill=\"#000000\"\r\n//                             d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n//                         ></path>\r\n//                         <path\r\n//                             fill=\"#000000\"\r\n//                             d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n//                         ></path>\r\n//                     </svg>\r\n//                 </div>\r\n//                 <p className=\"translate-x-2\">Go Back</p>\r\n//             </button>\r\n\r\n//             {/* Back button end */}\r\n\r\n//             <div className=\"flex justify-end mb-4\">\r\n//                 <button\r\n//                     onClick={handleCallUser}\r\n//                     className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\r\n//                 >\r\n//                     <PhoneIcon className=\"w-6 h-6\" />\r\n//                 </button>\r\n//                 <button\r\n//                     onClick={handleCallUser}\r\n//                     className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n//                 >\r\n//                     <VideoCameraIcon className=\"w-6 h-6\" />\r\n//                 </button>\r\n//             </div>\r\n\r\n//             <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\r\n//                 <div className=\"flex-grow\">\r\n//                     {messages.map((message) => (\r\n//                         <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\r\n//                             <p className=\"font-semibold\">{message.senderEmail}</p>\r\n//                             <p>{message.text}</p>\r\n//                             <button\r\n//                                 onClick={() => handleDeleteMessage(message.id)}\r\n//                                 className=\"text-red-500\"\r\n//                             >\r\n//                                 Delete\r\n//                             </button>\r\n//                         </div>\r\n//                     ))}\r\n//                     <div ref={messageEndRef} />\r\n//                 </div>\r\n//             </div>\r\n\r\n//             <div className=\"flex\">\r\n//                 <input\r\n//                     type=\"text\"\r\n//                     value={messageText}\r\n//                     onChange={(e) => setMessageText(e.target.value)}\r\n//                     placeholder=\"Type your message...\"\r\n//                     className=\"w-full px-3 py-2 border rounded\"\r\n//                 />\r\n//                 <button\r\n//                     onClick={handleSendMessage}\r\n//                     className=\"flex items-center bg-blue-500 text-white gap-1 px-4 py-2 cursor-pointer font-semibold tracking-widest rounded-md hover:bg-blue-400 duration-300 hover:gap-2 hover:translate-x-3\"\r\n//                 >\r\n//                     Send\r\n//                     <svg\r\n//                         className=\"w-5 h-5\"\r\n//                         stroke=\"currentColor\"\r\n//                         strokeWidth=\"1.5\"\r\n//                         viewBox=\"0 0 24 24\"\r\n//                         fill=\"none\"\r\n//                         xmlns=\"http://www.w3.org/2000/svg\"\r\n//                     >\r\n//                         <path\r\n//                             d=\"M6 12 3.269 3.125A59.769 59.769 0 0 1 21.485 12 59.768 59.768 0 0 1 3.27 20.875L5.999 12Zm0 0h7.5\"\r\n//                             strokeLinejoin=\"round\"\r\n//                             strokeLinecap=\"round\"\r\n//                         ></path>\r\n//                     </svg>\r\n//                 </button>\r\n//             </div>\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default ChatPage;\r\n\r\n\r\nimport React, { useState, useEffect, useRef } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport { io } from 'socket.io-client'; // Ensure you have this import if you're using socket.io\r\nimport defaultAvatar from '../assets/user (1).png'; // Replace with the actual path to the defaultAvatar image\r\n// import { PhoneIcon, VideoCameraIcon, PaperAirplaneIcon } from '@heroicons/react/24/outline'; // Adjust import if using a different icon library\r\nconst socket = io('http://localhost:3001'); // Replace with your server URL\r\nimport { PhoneIcon, VideoCameraIcon } from '@heroicons/react/solid';\r\n\r\n\r\nconst ChatPage = () => {\r\n    const [messages, setMessages] = useState([]);\r\n    const [messageText, setMessageText] = useState('');\r\n    const [receiverEmail, setReceiverEmail] = useState('');\r\n    const [error, setError] = useState('');\r\n    const messageEndRef = useRef(null);\r\n    const navigate = useNavigate();\r\n    const { receiverId } = useParams();\r\n\r\n    const username = localStorage.getItem('username');\r\n    const userId = localStorage.getItem('userId');\r\n    const userEmail = localStorage.getItem('userEmail');\r\n\r\n    useEffect(() => {\r\n        if (!receiverId) return;\r\n\r\n        const fetchReceiverEmail = async () => {\r\n            try {\r\n                const response = await fetch(`http://localhost:3001/getUserEmailById/${receiverId}`);\r\n                const result = await response.json();\r\n                if (result.userEmail) {\r\n                    setReceiverEmail(result.userEmail);\r\n                } else {\r\n                    throw new Error('No email found for receiver');\r\n                }\r\n            } catch (error) {\r\n                console.error('Failed to fetch receiver email:', error);\r\n                setError('Failed to fetch receiver email.');\r\n            }\r\n        };\r\n\r\n        fetchReceiverEmail();\r\n\r\n        socket.emit('joinRoom', receiverId);\r\n\r\n        // Receive messages from the server\r\n        socket.on('message', (message) => {\r\n            setMessages((prevMessages) => [...prevMessages, message]);\r\n            messageEndRef.current?.scrollIntoView({ behavior: 'smooth' });\r\n        });\r\n\r\n        // Receive notifications for deleted messages\r\n        socket.on('messageDeleted', (messageId) => {\r\n            setMessages((prevMessages) => prevMessages.filter((msg) => msg.id !== messageId));\r\n        });\r\n\r\n        return () => {\r\n            socket.off('message');\r\n            socket.off('messageDeleted');\r\n        };\r\n    }, [receiverId]);\r\n\r\n    const handleSendMessage = async () => {\r\n        console.log('Sender Email:', userEmail);\r\n        console.log('Receiver Email:', receiverEmail);\r\n        if (messageText.trim()) {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/sendMessage', {\r\n                    method: 'POST',\r\n                    headers: {\r\n                        'Content-Type': 'application/json',\r\n                    },\r\n                    body: JSON.stringify({\r\n                        senderEmail: userEmail,\r\n                        receiverEmail: receiverEmail,\r\n                        text: messageText,\r\n                    }),\r\n                });\r\n                const result = await response.json();\r\n                if (response.ok) {\r\n                    setMessageText('');\r\n                } else {\r\n                    console.error('SendMessage Error:', result.message);\r\n                }\r\n            } catch (error) {\r\n                console.error('SendMessage Fetch Error:', error);\r\n            }\r\n        }\r\n    };\r\n\r\n    const handleDeleteMessage = async (messageId) => {\r\n        try {\r\n            await fetch('http://localhost:3001/deleteMessage', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({ messageId }),\r\n            });\r\n        } catch (error) {\r\n            console.error('DeleteMessage Error:', error);\r\n        }\r\n    };\r\n\r\n    const handleBack = () => {\r\n        navigate('/home');\r\n    };\r\n\r\n    const handleCallUser = () => {\r\n        console.log('Calling user:', receiverId);\r\n    };\r\n\r\n    return (\r\n        <div className=\"min-h-screen flex flex-col bg-gradient-to-r from-slate-300 to-slate-500 p-4\">\r\n            <div className=\"flex items-center mb-4\">\r\n                <img\r\n                    src={defaultAvatar}\r\n                    alt=\"Avatar\"\r\n                    className=\"w-12 h-12 rounded-full mr-4 border-2 border-gray-300\"\r\n                />\r\n                {receiverEmail ? (\r\n                    <h1 className=\"text-2xl font-bold\">{receiverEmail}</h1>\r\n                ) : (\r\n                    <h1 className=\"text-2xl font-bold\">Loading...</h1>\r\n                )}\r\n            </div>\r\n\r\n            <button\r\n                onClick={handleBack}\r\n                type=\"button\"\r\n                className=\"bg-white text-center w-48 rounded-2xl h-14 relative font-sans text-black text-xl font-semibold group justify-end mt-(-4)\"\r\n            >\r\n                <div\r\n                    className=\"bg-green-400 rounded-xl h-12 w-1/4 flex items-center justify-center absolute left-1 top-[4px] group-hover:w-[184px] z-10 duration-500\"\r\n                >\r\n                    <svg\r\n                        width=\"25px\"\r\n                        height=\"25px\"\r\n                        viewBox=\"0 0 1024 1024\"\r\n                        xmlns=\"http://www.w3.org/2000/svg\"\r\n                    >\r\n                        <path\r\n                            fill=\"#000000\"\r\n                            d=\"M224 480h640a32 32 0 1 1 0 64H224a32 32 0 0 1 0-64z\"\r\n                        ></path>\r\n                        <path\r\n                            fill=\"#000000\"\r\n                            d=\"m237.248 512 265.408 265.344a32 32 0 0 1-45.312 45.312l-288-288a32 32 0 0 1 0-45.312l288-288a32 32 0 1 1 45.312 45.312L237.248 512z\"\r\n                        ></path>\r\n                    </svg>\r\n                </div>\r\n                <p className=\"translate-x-2\">Go Back</p>\r\n            </button>\r\n\r\n            <div className=\"flex justify-end mb-4\">\r\n                <button\r\n                    onClick={handleCallUser}\r\n                    className=\"bg-green-500 text-white py-2 px-4 rounded mr-2\"\r\n                >\r\n                    <PhoneIcon className=\"w-6 h-6\" />\r\n                </button>\r\n                <button\r\n                    onClick={handleCallUser}\r\n                    className=\"bg-blue-500 text-white py-2 px-4 rounded\"\r\n                >\r\n                    <VideoCameraIcon className=\"w-6 h-6\" />\r\n                </button>\r\n            </div>\r\n\r\n            <div className=\"flex flex-col flex-grow overflow-y-auto mb-4\">\r\n                <div className=\"flex-grow\">\r\n                    {messages.map((message) => (\r\n                        <div key={message.id} className=\"bg-white p-4 mb-2 rounded shadow\">\r\n                            <p className=\"font-semibold\">{message.senderEmail}</p>\r\n                            <p>{message.text}</p>\r\n                            <button\r\n                                onClick={() => handleDeleteMessage(message.id)}\r\n                                className=\"text-red-500\"\r\n                            >\r\n                                Delete\r\n                            </button>\r\n                        </div>\r\n                    ))}\r\n                    <div ref={messageEndRef} />\r\n                </div>\r\n            </div>\r\n\r\n            <div className=\"flex\">\r\n                <input\r\n                    type=\"text\"\r\n                    value={messageText}\r\n                    onChange={(e) => setMessageText(e.target.value)}\r\n                    placeholder=\"Type your message...\"\r\n                    className=\"w-full px-3 py-2 border rounded\"\r\n                />\r\n                <button\r\n                    onClick={handleSendMessage}\r\n                    className=\"flex items-center justify-center px-4 py-2 bg-blue-500 text-white rounded ml-2\"\r\n                >\r\n                    <PaperAirplaneIcon className=\"w-6 h-6\" />\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ChatPage;\r\n"],"mappings":";;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAIA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;A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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}